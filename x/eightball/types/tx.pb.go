// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: eightball/eightball/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateMagicKey struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCreateMagicKey) Reset()         { *m = MsgCreateMagicKey{} }
func (m *MsgCreateMagicKey) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMagicKey) ProtoMessage()    {}
func (*MsgCreateMagicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{0}
}
func (m *MsgCreateMagicKey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMagicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMagicKey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMagicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMagicKey.Merge(m, src)
}
func (m *MsgCreateMagicKey) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMagicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMagicKey.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMagicKey proto.InternalMessageInfo

func (m *MsgCreateMagicKey) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCreateMagicKeyResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateMagicKeyResponse) Reset()         { *m = MsgCreateMagicKeyResponse{} }
func (m *MsgCreateMagicKeyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMagicKeyResponse) ProtoMessage()    {}
func (*MsgCreateMagicKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{1}
}
func (m *MsgCreateMagicKeyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMagicKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMagicKeyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMagicKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMagicKeyResponse.Merge(m, src)
}
func (m *MsgCreateMagicKeyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMagicKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMagicKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMagicKeyResponse proto.InternalMessageInfo

func (m *MsgCreateMagicKeyResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateSpiritConjuringPoems struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MagicKeyId  uint64 `protobuf:"varint,2,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	BlockHeight uint64 `protobuf:"varint,3,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	Poem        string `protobuf:"bytes,4,opt,name=poem,proto3" json:"poem,omitempty"`
	ConjuringId uint64 `protobuf:"varint,5,opt,name=conjuringId,proto3" json:"conjuringId,omitempty"`
	UeblPower   uint64 `protobuf:"varint,6,opt,name=ueblPower,proto3" json:"ueblPower,omitempty"`
}

func (m *MsgCreateSpiritConjuringPoems) Reset()         { *m = MsgCreateSpiritConjuringPoems{} }
func (m *MsgCreateSpiritConjuringPoems) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSpiritConjuringPoems) ProtoMessage()    {}
func (*MsgCreateSpiritConjuringPoems) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{2}
}
func (m *MsgCreateSpiritConjuringPoems) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSpiritConjuringPoems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSpiritConjuringPoems.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSpiritConjuringPoems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSpiritConjuringPoems.Merge(m, src)
}
func (m *MsgCreateSpiritConjuringPoems) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSpiritConjuringPoems) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSpiritConjuringPoems.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSpiritConjuringPoems proto.InternalMessageInfo

func (m *MsgCreateSpiritConjuringPoems) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSpiritConjuringPoems) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

func (m *MsgCreateSpiritConjuringPoems) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *MsgCreateSpiritConjuringPoems) GetPoem() string {
	if m != nil {
		return m.Poem
	}
	return ""
}

func (m *MsgCreateSpiritConjuringPoems) GetConjuringId() uint64 {
	if m != nil {
		return m.ConjuringId
	}
	return 0
}

func (m *MsgCreateSpiritConjuringPoems) GetUeblPower() uint64 {
	if m != nil {
		return m.UeblPower
	}
	return 0
}

type MsgCreateSpiritConjuringPoemsResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSpiritConjuringPoemsResponse) Reset()         { *m = MsgCreateSpiritConjuringPoemsResponse{} }
func (m *MsgCreateSpiritConjuringPoemsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSpiritConjuringPoemsResponse) ProtoMessage()    {}
func (*MsgCreateSpiritConjuringPoemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{3}
}
func (m *MsgCreateSpiritConjuringPoemsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSpiritConjuringPoemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSpiritConjuringPoemsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSpiritConjuringPoemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSpiritConjuringPoemsResponse.Merge(m, src)
}
func (m *MsgCreateSpiritConjuringPoemsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSpiritConjuringPoemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSpiritConjuringPoemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSpiritConjuringPoemsResponse proto.InternalMessageInfo

func (m *MsgCreateSpiritConjuringPoemsResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgFinalizeConjuring struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ConjuringId uint64 `protobuf:"varint,2,opt,name=conjuringId,proto3" json:"conjuringId,omitempty"`
}

func (m *MsgFinalizeConjuring) Reset()         { *m = MsgFinalizeConjuring{} }
func (m *MsgFinalizeConjuring) String() string { return proto.CompactTextString(m) }
func (*MsgFinalizeConjuring) ProtoMessage()    {}
func (*MsgFinalizeConjuring) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{4}
}
func (m *MsgFinalizeConjuring) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeConjuring) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeConjuring.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeConjuring) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeConjuring.Merge(m, src)
}
func (m *MsgFinalizeConjuring) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeConjuring) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeConjuring.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeConjuring proto.InternalMessageInfo

func (m *MsgFinalizeConjuring) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFinalizeConjuring) GetConjuringId() uint64 {
	if m != nil {
		return m.ConjuringId
	}
	return 0
}

type MsgFinalizeConjuringResponse struct {
}

func (m *MsgFinalizeConjuringResponse) Reset()         { *m = MsgFinalizeConjuringResponse{} }
func (m *MsgFinalizeConjuringResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFinalizeConjuringResponse) ProtoMessage()    {}
func (*MsgFinalizeConjuringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{5}
}
func (m *MsgFinalizeConjuringResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeConjuringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeConjuringResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeConjuringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeConjuringResponse.Merge(m, src)
}
func (m *MsgFinalizeConjuringResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeConjuringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeConjuringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeConjuringResponse proto.InternalMessageInfo

type MsgCreateVerse struct {
	Creator     string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	FromSpirit  string   `protobuf:"bytes,2,opt,name=fromSpirit,proto3" json:"fromSpirit,omitempty"`
	ToSpirit    []string `protobuf:"bytes,3,rep,name=toSpirit,proto3" json:"toSpirit,omitempty"`
	WireBytes   string   `protobuf:"bytes,4,opt,name=wireBytes,proto3" json:"wireBytes,omitempty"`
	Broadcast   bool     `protobuf:"varint,5,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	ToOld       bool     `protobuf:"varint,6,opt,name=toOld,proto3" json:"toOld,omitempty"`
	ToOldAndNew bool     `protobuf:"varint,7,opt,name=toOldAndNew,proto3" json:"toOldAndNew,omitempty"`
	MagicKeyId  uint64   `protobuf:"varint,8,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	SummoningId uint64   `protobuf:"varint,9,opt,name=summoningId,proto3" json:"summoningId,omitempty"`
}

func (m *MsgCreateVerse) Reset()         { *m = MsgCreateVerse{} }
func (m *MsgCreateVerse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVerse) ProtoMessage()    {}
func (*MsgCreateVerse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{6}
}
func (m *MsgCreateVerse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVerse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVerse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVerse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVerse.Merge(m, src)
}
func (m *MsgCreateVerse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVerse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVerse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVerse proto.InternalMessageInfo

func (m *MsgCreateVerse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateVerse) GetFromSpirit() string {
	if m != nil {
		return m.FromSpirit
	}
	return ""
}

func (m *MsgCreateVerse) GetToSpirit() []string {
	if m != nil {
		return m.ToSpirit
	}
	return nil
}

func (m *MsgCreateVerse) GetWireBytes() string {
	if m != nil {
		return m.WireBytes
	}
	return ""
}

func (m *MsgCreateVerse) GetBroadcast() bool {
	if m != nil {
		return m.Broadcast
	}
	return false
}

func (m *MsgCreateVerse) GetToOld() bool {
	if m != nil {
		return m.ToOld
	}
	return false
}

func (m *MsgCreateVerse) GetToOldAndNew() bool {
	if m != nil {
		return m.ToOldAndNew
	}
	return false
}

func (m *MsgCreateVerse) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

func (m *MsgCreateVerse) GetSummoningId() uint64 {
	if m != nil {
		return m.SummoningId
	}
	return 0
}

type MsgCreateVerseResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateVerseResponse) Reset()         { *m = MsgCreateVerseResponse{} }
func (m *MsgCreateVerseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVerseResponse) ProtoMessage()    {}
func (*MsgCreateVerseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{7}
}
func (m *MsgCreateVerseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVerseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVerseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVerseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVerseResponse.Merge(m, src)
}
func (m *MsgCreateVerseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVerseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVerseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVerseResponse proto.InternalMessageInfo

func (m *MsgCreateVerseResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteVerse struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MagicKeyId uint64 `protobuf:"varint,2,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	Id         uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteVerse) Reset()         { *m = MsgDeleteVerse{} }
func (m *MsgDeleteVerse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteVerse) ProtoMessage()    {}
func (*MsgDeleteVerse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{8}
}
func (m *MsgDeleteVerse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteVerse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteVerse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteVerse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteVerse.Merge(m, src)
}
func (m *MsgDeleteVerse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteVerse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteVerse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteVerse proto.InternalMessageInfo

func (m *MsgDeleteVerse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteVerse) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

func (m *MsgDeleteVerse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteVerseResponse struct {
}

func (m *MsgDeleteVerseResponse) Reset()         { *m = MsgDeleteVerseResponse{} }
func (m *MsgDeleteVerseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteVerseResponse) ProtoMessage()    {}
func (*MsgDeleteVerseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{9}
}
func (m *MsgDeleteVerseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteVerseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteVerseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteVerseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteVerseResponse.Merge(m, src)
}
func (m *MsgDeleteVerseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteVerseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteVerseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteVerseResponse proto.InternalMessageInfo

type MsgCreateVision struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MagicKeyId  uint64 `protobuf:"varint,2,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	EcPointX    string `protobuf:"bytes,3,opt,name=ecPointX,proto3" json:"ecPointX,omitempty"`
	EcPointY    string `protobuf:"bytes,4,opt,name=ecPointY,proto3" json:"ecPointY,omitempty"`
	SummoningId uint64 `protobuf:"varint,5,opt,name=summoningId,proto3" json:"summoningId,omitempty"`
}

func (m *MsgCreateVision) Reset()         { *m = MsgCreateVision{} }
func (m *MsgCreateVision) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVision) ProtoMessage()    {}
func (*MsgCreateVision) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{10}
}
func (m *MsgCreateVision) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVision.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVision.Merge(m, src)
}
func (m *MsgCreateVision) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVision) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVision.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVision proto.InternalMessageInfo

func (m *MsgCreateVision) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateVision) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

func (m *MsgCreateVision) GetEcPointX() string {
	if m != nil {
		return m.EcPointX
	}
	return ""
}

func (m *MsgCreateVision) GetEcPointY() string {
	if m != nil {
		return m.EcPointY
	}
	return ""
}

func (m *MsgCreateVision) GetSummoningId() uint64 {
	if m != nil {
		return m.SummoningId
	}
	return 0
}

type MsgCreateVisionResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateVisionResponse) Reset()         { *m = MsgCreateVisionResponse{} }
func (m *MsgCreateVisionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVisionResponse) ProtoMessage()    {}
func (*MsgCreateVisionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{11}
}
func (m *MsgCreateVisionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVisionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVisionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVisionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVisionResponse.Merge(m, src)
}
func (m *MsgCreateVisionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVisionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVisionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVisionResponse proto.InternalMessageInfo

func (m *MsgCreateVisionResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteVision struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MagicKeyId uint64 `protobuf:"varint,2,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	Id         uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteVision) Reset()         { *m = MsgDeleteVision{} }
func (m *MsgDeleteVision) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteVision) ProtoMessage()    {}
func (*MsgDeleteVision) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{12}
}
func (m *MsgDeleteVision) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteVision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteVision.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteVision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteVision.Merge(m, src)
}
func (m *MsgDeleteVision) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteVision) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteVision.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteVision proto.InternalMessageInfo

func (m *MsgDeleteVision) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteVision) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

func (m *MsgDeleteVision) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteVisionResponse struct {
}

func (m *MsgDeleteVisionResponse) Reset()         { *m = MsgDeleteVisionResponse{} }
func (m *MsgDeleteVisionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteVisionResponse) ProtoMessage()    {}
func (*MsgDeleteVisionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{13}
}
func (m *MsgDeleteVisionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteVisionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteVisionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteVisionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteVisionResponse.Merge(m, src)
}
func (m *MsgDeleteVisionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteVisionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteVisionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteVisionResponse proto.InternalMessageInfo

type MsgCreateMessage struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Body    string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *MsgCreateMessage) Reset()         { *m = MsgCreateMessage{} }
func (m *MsgCreateMessage) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMessage) ProtoMessage()    {}
func (*MsgCreateMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{14}
}
func (m *MsgCreateMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMessage.Merge(m, src)
}
func (m *MsgCreateMessage) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMessage proto.InternalMessageInfo

func (m *MsgCreateMessage) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type MsgCreateMessageResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateMessageResponse) Reset()         { *m = MsgCreateMessageResponse{} }
func (m *MsgCreateMessageResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMessageResponse) ProtoMessage()    {}
func (*MsgCreateMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{15}
}
func (m *MsgCreateMessageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMessageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMessageResponse.Merge(m, src)
}
func (m *MsgCreateMessageResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMessageResponse proto.InternalMessageInfo

func (m *MsgCreateMessageResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateSignatureRequest struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MessageId uint64 `protobuf:"varint,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
}

func (m *MsgCreateSignatureRequest) Reset()         { *m = MsgCreateSignatureRequest{} }
func (m *MsgCreateSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignatureRequest) ProtoMessage()    {}
func (*MsgCreateSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{16}
}
func (m *MsgCreateSignatureRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignatureRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignatureRequest.Merge(m, src)
}
func (m *MsgCreateSignatureRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignatureRequest proto.InternalMessageInfo

func (m *MsgCreateSignatureRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSignatureRequest) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

type MsgCreateSignatureRequestResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSignatureRequestResponse) Reset()         { *m = MsgCreateSignatureRequestResponse{} }
func (m *MsgCreateSignatureRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignatureRequestResponse) ProtoMessage()    {}
func (*MsgCreateSignatureRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{17}
}
func (m *MsgCreateSignatureRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignatureRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignatureRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignatureRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignatureRequestResponse.Merge(m, src)
}
func (m *MsgCreateSignatureRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignatureRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignatureRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignatureRequestResponse proto.InternalMessageInfo

func (m *MsgCreateSignatureRequestResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSignatureRequest struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	MessageId uint64 `protobuf:"varint,3,opt,name=messageId,proto3" json:"messageId,omitempty"`
}

func (m *MsgUpdateSignatureRequest) Reset()         { *m = MsgUpdateSignatureRequest{} }
func (m *MsgUpdateSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSignatureRequest) ProtoMessage()    {}
func (*MsgUpdateSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{18}
}
func (m *MsgUpdateSignatureRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSignatureRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSignatureRequest.Merge(m, src)
}
func (m *MsgUpdateSignatureRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSignatureRequest proto.InternalMessageInfo

func (m *MsgUpdateSignatureRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSignatureRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSignatureRequest) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

type MsgUpdateSignatureRequestResponse struct {
}

func (m *MsgUpdateSignatureRequestResponse) Reset()         { *m = MsgUpdateSignatureRequestResponse{} }
func (m *MsgUpdateSignatureRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSignatureRequestResponse) ProtoMessage()    {}
func (*MsgUpdateSignatureRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{19}
}
func (m *MsgUpdateSignatureRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSignatureRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSignatureRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSignatureRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSignatureRequestResponse.Merge(m, src)
}
func (m *MsgUpdateSignatureRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSignatureRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSignatureRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSignatureRequestResponse proto.InternalMessageInfo

type MsgDeleteSignatureRequest struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSignatureRequest) Reset()         { *m = MsgDeleteSignatureRequest{} }
func (m *MsgDeleteSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSignatureRequest) ProtoMessage()    {}
func (*MsgDeleteSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{20}
}
func (m *MsgDeleteSignatureRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSignatureRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSignatureRequest.Merge(m, src)
}
func (m *MsgDeleteSignatureRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSignatureRequest proto.InternalMessageInfo

func (m *MsgDeleteSignatureRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSignatureRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSignatureRequestResponse struct {
}

func (m *MsgDeleteSignatureRequestResponse) Reset()         { *m = MsgDeleteSignatureRequestResponse{} }
func (m *MsgDeleteSignatureRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSignatureRequestResponse) ProtoMessage()    {}
func (*MsgDeleteSignatureRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{21}
}
func (m *MsgDeleteSignatureRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSignatureRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSignatureRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSignatureRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSignatureRequestResponse.Merge(m, src)
}
func (m *MsgDeleteSignatureRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSignatureRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSignatureRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSignatureRequestResponse proto.InternalMessageInfo

type MsgCreateSignatureShare struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MessageId  uint64 `protobuf:"varint,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	ShareData  string `protobuf:"bytes,3,opt,name=shareData,proto3" json:"shareData,omitempty"`
	MagicKeyId uint64 `protobuf:"varint,4,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	PubKey     string `protobuf:"bytes,5,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
}

func (m *MsgCreateSignatureShare) Reset()         { *m = MsgCreateSignatureShare{} }
func (m *MsgCreateSignatureShare) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignatureShare) ProtoMessage()    {}
func (*MsgCreateSignatureShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{22}
}
func (m *MsgCreateSignatureShare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignatureShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignatureShare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignatureShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignatureShare.Merge(m, src)
}
func (m *MsgCreateSignatureShare) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignatureShare) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignatureShare.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignatureShare proto.InternalMessageInfo

func (m *MsgCreateSignatureShare) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSignatureShare) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *MsgCreateSignatureShare) GetShareData() string {
	if m != nil {
		return m.ShareData
	}
	return ""
}

func (m *MsgCreateSignatureShare) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

func (m *MsgCreateSignatureShare) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type MsgCreateSignatureShareResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSignatureShareResponse) Reset()         { *m = MsgCreateSignatureShareResponse{} }
func (m *MsgCreateSignatureShareResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignatureShareResponse) ProtoMessage()    {}
func (*MsgCreateSignatureShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{23}
}
func (m *MsgCreateSignatureShareResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignatureShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignatureShareResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignatureShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignatureShareResponse.Merge(m, src)
}
func (m *MsgCreateSignatureShareResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignatureShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignatureShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignatureShareResponse proto.InternalMessageInfo

func (m *MsgCreateSignatureShareResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateSignedMessage struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Body           string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Signature      string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	BitcoinAddress string `protobuf:"bytes,4,opt,name=bitcoinAddress,proto3" json:"bitcoinAddress,omitempty"`
	MessageId      uint64 `protobuf:"varint,5,opt,name=messageId,proto3" json:"messageId,omitempty"`
	SigRequestId   uint64 `protobuf:"varint,6,opt,name=sigRequestId,proto3" json:"sigRequestId,omitempty"`
	MagicKeyId     uint64 `protobuf:"varint,7,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
}

func (m *MsgCreateSignedMessage) Reset()         { *m = MsgCreateSignedMessage{} }
func (m *MsgCreateSignedMessage) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignedMessage) ProtoMessage()    {}
func (*MsgCreateSignedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{24}
}
func (m *MsgCreateSignedMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignedMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignedMessage.Merge(m, src)
}
func (m *MsgCreateSignedMessage) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignedMessage proto.InternalMessageInfo

func (m *MsgCreateSignedMessage) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSignedMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *MsgCreateSignedMessage) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *MsgCreateSignedMessage) GetBitcoinAddress() string {
	if m != nil {
		return m.BitcoinAddress
	}
	return ""
}

func (m *MsgCreateSignedMessage) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *MsgCreateSignedMessage) GetSigRequestId() uint64 {
	if m != nil {
		return m.SigRequestId
	}
	return 0
}

func (m *MsgCreateSignedMessage) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

type MsgCreateSignedMessageResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSignedMessageResponse) Reset()         { *m = MsgCreateSignedMessageResponse{} }
func (m *MsgCreateSignedMessageResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignedMessageResponse) ProtoMessage()    {}
func (*MsgCreateSignedMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{25}
}
func (m *MsgCreateSignedMessageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignedMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignedMessageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignedMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignedMessageResponse.Merge(m, src)
}
func (m *MsgCreateSignedMessageResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignedMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignedMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignedMessageResponse proto.InternalMessageInfo

func (m *MsgCreateSignedMessageResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateMeditationSummoning struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MagicKeyId uint64 `protobuf:"varint,2,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
}

func (m *MsgCreateMeditationSummoning) Reset()         { *m = MsgCreateMeditationSummoning{} }
func (m *MsgCreateMeditationSummoning) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMeditationSummoning) ProtoMessage()    {}
func (*MsgCreateMeditationSummoning) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{26}
}
func (m *MsgCreateMeditationSummoning) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMeditationSummoning) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMeditationSummoning.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMeditationSummoning) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMeditationSummoning.Merge(m, src)
}
func (m *MsgCreateMeditationSummoning) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMeditationSummoning) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMeditationSummoning.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMeditationSummoning proto.InternalMessageInfo

func (m *MsgCreateMeditationSummoning) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMeditationSummoning) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

type MsgCreateMeditationSummoningResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateMeditationSummoningResponse) Reset()         { *m = MsgCreateMeditationSummoningResponse{} }
func (m *MsgCreateMeditationSummoningResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMeditationSummoningResponse) ProtoMessage()    {}
func (*MsgCreateMeditationSummoningResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{27}
}
func (m *MsgCreateMeditationSummoningResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMeditationSummoningResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMeditationSummoningResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMeditationSummoningResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMeditationSummoningResponse.Merge(m, src)
}
func (m *MsgCreateMeditationSummoningResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMeditationSummoningResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMeditationSummoningResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMeditationSummoningResponse proto.InternalMessageInfo

func (m *MsgCreateMeditationSummoningResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteMeditationSummoning struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteMeditationSummoning) Reset()         { *m = MsgDeleteMeditationSummoning{} }
func (m *MsgDeleteMeditationSummoning) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMeditationSummoning) ProtoMessage()    {}
func (*MsgDeleteMeditationSummoning) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{28}
}
func (m *MsgDeleteMeditationSummoning) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMeditationSummoning) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMeditationSummoning.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMeditationSummoning) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMeditationSummoning.Merge(m, src)
}
func (m *MsgDeleteMeditationSummoning) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMeditationSummoning) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMeditationSummoning.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMeditationSummoning proto.InternalMessageInfo

func (m *MsgDeleteMeditationSummoning) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteMeditationSummoning) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteMeditationSummoningResponse struct {
}

func (m *MsgDeleteMeditationSummoningResponse) Reset()         { *m = MsgDeleteMeditationSummoningResponse{} }
func (m *MsgDeleteMeditationSummoningResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMeditationSummoningResponse) ProtoMessage()    {}
func (*MsgDeleteMeditationSummoningResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{29}
}
func (m *MsgDeleteMeditationSummoningResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMeditationSummoningResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMeditationSummoningResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMeditationSummoningResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMeditationSummoningResponse.Merge(m, src)
}
func (m *MsgDeleteMeditationSummoningResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMeditationSummoningResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMeditationSummoningResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMeditationSummoningResponse proto.InternalMessageInfo

type MsgCreateMeditation struct {
	Creator     string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	FromSpirit  string   `protobuf:"bytes,2,opt,name=fromSpirit,proto3" json:"fromSpirit,omitempty"`
	ToSpirit    []string `protobuf:"bytes,3,rep,name=toSpirit,proto3" json:"toSpirit,omitempty"`
	WireBytes   string   `protobuf:"bytes,4,opt,name=wireBytes,proto3" json:"wireBytes,omitempty"`
	Broadcast   bool     `protobuf:"varint,5,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	ToOld       bool     `protobuf:"varint,6,opt,name=toOld,proto3" json:"toOld,omitempty"`
	ToOldAndNew bool     `protobuf:"varint,7,opt,name=toOldAndNew,proto3" json:"toOldAndNew,omitempty"`
	MagicKeyId  uint64   `protobuf:"varint,8,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	SummoningId uint64   `protobuf:"varint,9,opt,name=summoningId,proto3" json:"summoningId,omitempty"`
}

func (m *MsgCreateMeditation) Reset()         { *m = MsgCreateMeditation{} }
func (m *MsgCreateMeditation) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMeditation) ProtoMessage()    {}
func (*MsgCreateMeditation) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{30}
}
func (m *MsgCreateMeditation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMeditation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMeditation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMeditation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMeditation.Merge(m, src)
}
func (m *MsgCreateMeditation) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMeditation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMeditation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMeditation proto.InternalMessageInfo

func (m *MsgCreateMeditation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMeditation) GetFromSpirit() string {
	if m != nil {
		return m.FromSpirit
	}
	return ""
}

func (m *MsgCreateMeditation) GetToSpirit() []string {
	if m != nil {
		return m.ToSpirit
	}
	return nil
}

func (m *MsgCreateMeditation) GetWireBytes() string {
	if m != nil {
		return m.WireBytes
	}
	return ""
}

func (m *MsgCreateMeditation) GetBroadcast() bool {
	if m != nil {
		return m.Broadcast
	}
	return false
}

func (m *MsgCreateMeditation) GetToOld() bool {
	if m != nil {
		return m.ToOld
	}
	return false
}

func (m *MsgCreateMeditation) GetToOldAndNew() bool {
	if m != nil {
		return m.ToOldAndNew
	}
	return false
}

func (m *MsgCreateMeditation) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

func (m *MsgCreateMeditation) GetSummoningId() uint64 {
	if m != nil {
		return m.SummoningId
	}
	return 0
}

type MsgCreateMeditationResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateMeditationResponse) Reset()         { *m = MsgCreateMeditationResponse{} }
func (m *MsgCreateMeditationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMeditationResponse) ProtoMessage()    {}
func (*MsgCreateMeditationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{31}
}
func (m *MsgCreateMeditationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMeditationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMeditationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMeditationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMeditationResponse.Merge(m, src)
}
func (m *MsgCreateMeditationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMeditationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMeditationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMeditationResponse proto.InternalMessageInfo

func (m *MsgCreateMeditationResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteMeditation struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteMeditation) Reset()         { *m = MsgDeleteMeditation{} }
func (m *MsgDeleteMeditation) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMeditation) ProtoMessage()    {}
func (*MsgDeleteMeditation) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{32}
}
func (m *MsgDeleteMeditation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMeditation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMeditation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMeditation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMeditation.Merge(m, src)
}
func (m *MsgDeleteMeditation) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMeditation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMeditation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMeditation proto.InternalMessageInfo

func (m *MsgDeleteMeditation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteMeditation) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteMeditationResponse struct {
}

func (m *MsgDeleteMeditationResponse) Reset()         { *m = MsgDeleteMeditationResponse{} }
func (m *MsgDeleteMeditationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMeditationResponse) ProtoMessage()    {}
func (*MsgDeleteMeditationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{33}
}
func (m *MsgDeleteMeditationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMeditationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMeditationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMeditationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMeditationResponse.Merge(m, src)
}
func (m *MsgDeleteMeditationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMeditationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMeditationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMeditationResponse proto.InternalMessageInfo

type MsgCreateScripture struct {
	Witness  string `protobuf:"bytes,1,opt,name=witness,proto3" json:"witness,omitempty"`
	Index    string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Hash     string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Location string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Address  string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Alias    string `protobuf:"bytes,6,opt,name=alias,proto3" json:"alias,omitempty"`
	Value    string `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *MsgCreateScripture) Reset()         { *m = MsgCreateScripture{} }
func (m *MsgCreateScripture) String() string { return proto.CompactTextString(m) }
func (*MsgCreateScripture) ProtoMessage()    {}
func (*MsgCreateScripture) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{34}
}
func (m *MsgCreateScripture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateScripture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateScripture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateScripture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateScripture.Merge(m, src)
}
func (m *MsgCreateScripture) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateScripture) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateScripture.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateScripture proto.InternalMessageInfo

func (m *MsgCreateScripture) GetWitness() string {
	if m != nil {
		return m.Witness
	}
	return ""
}

func (m *MsgCreateScripture) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateScripture) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *MsgCreateScripture) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MsgCreateScripture) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreateScripture) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *MsgCreateScripture) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MsgCreateScriptureResponse struct {
}

func (m *MsgCreateScriptureResponse) Reset()         { *m = MsgCreateScriptureResponse{} }
func (m *MsgCreateScriptureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateScriptureResponse) ProtoMessage()    {}
func (*MsgCreateScriptureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{35}
}
func (m *MsgCreateScriptureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateScriptureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateScriptureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateScriptureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateScriptureResponse.Merge(m, src)
}
func (m *MsgCreateScriptureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateScriptureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateScriptureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateScriptureResponse proto.InternalMessageInfo

type MsgCreateScriptureSignatureRequest struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ScriptureIndex string `protobuf:"bytes,2,opt,name=scriptureIndex,proto3" json:"scriptureIndex,omitempty"`
}

func (m *MsgCreateScriptureSignatureRequest) Reset()         { *m = MsgCreateScriptureSignatureRequest{} }
func (m *MsgCreateScriptureSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateScriptureSignatureRequest) ProtoMessage()    {}
func (*MsgCreateScriptureSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{36}
}
func (m *MsgCreateScriptureSignatureRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateScriptureSignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateScriptureSignatureRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateScriptureSignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateScriptureSignatureRequest.Merge(m, src)
}
func (m *MsgCreateScriptureSignatureRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateScriptureSignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateScriptureSignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateScriptureSignatureRequest proto.InternalMessageInfo

func (m *MsgCreateScriptureSignatureRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateScriptureSignatureRequest) GetScriptureIndex() string {
	if m != nil {
		return m.ScriptureIndex
	}
	return ""
}

type MsgCreateScriptureSignatureRequestResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateScriptureSignatureRequestResponse) Reset() {
	*m = MsgCreateScriptureSignatureRequestResponse{}
}
func (m *MsgCreateScriptureSignatureRequestResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgCreateScriptureSignatureRequestResponse) ProtoMessage() {}
func (*MsgCreateScriptureSignatureRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{37}
}
func (m *MsgCreateScriptureSignatureRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateScriptureSignatureRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateScriptureSignatureRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateScriptureSignatureRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateScriptureSignatureRequestResponse.Merge(m, src)
}
func (m *MsgCreateScriptureSignatureRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateScriptureSignatureRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateScriptureSignatureRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateScriptureSignatureRequestResponse proto.InternalMessageInfo

func (m *MsgCreateScriptureSignatureRequestResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateScriptureSignatureShare struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ScriptureIndex string `protobuf:"bytes,2,opt,name=scriptureIndex,proto3" json:"scriptureIndex,omitempty"`
	ShareData      string `protobuf:"bytes,3,opt,name=shareData,proto3" json:"shareData,omitempty"`
	MagicKeyId     uint64 `protobuf:"varint,4,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	PubKey         string `protobuf:"bytes,5,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
}

func (m *MsgCreateScriptureSignatureShare) Reset()         { *m = MsgCreateScriptureSignatureShare{} }
func (m *MsgCreateScriptureSignatureShare) String() string { return proto.CompactTextString(m) }
func (*MsgCreateScriptureSignatureShare) ProtoMessage()    {}
func (*MsgCreateScriptureSignatureShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{38}
}
func (m *MsgCreateScriptureSignatureShare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateScriptureSignatureShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateScriptureSignatureShare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateScriptureSignatureShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateScriptureSignatureShare.Merge(m, src)
}
func (m *MsgCreateScriptureSignatureShare) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateScriptureSignatureShare) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateScriptureSignatureShare.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateScriptureSignatureShare proto.InternalMessageInfo

func (m *MsgCreateScriptureSignatureShare) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateScriptureSignatureShare) GetScriptureIndex() string {
	if m != nil {
		return m.ScriptureIndex
	}
	return ""
}

func (m *MsgCreateScriptureSignatureShare) GetShareData() string {
	if m != nil {
		return m.ShareData
	}
	return ""
}

func (m *MsgCreateScriptureSignatureShare) GetMagicKeyId() uint64 {
	if m != nil {
		return m.MagicKeyId
	}
	return 0
}

func (m *MsgCreateScriptureSignatureShare) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type MsgCreateScriptureSignatureShareResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateScriptureSignatureShareResponse) Reset() {
	*m = MsgCreateScriptureSignatureShareResponse{}
}
func (m *MsgCreateScriptureSignatureShareResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateScriptureSignatureShareResponse) ProtoMessage()    {}
func (*MsgCreateScriptureSignatureShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{39}
}
func (m *MsgCreateScriptureSignatureShareResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateScriptureSignatureShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateScriptureSignatureShareResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateScriptureSignatureShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateScriptureSignatureShareResponse.Merge(m, src)
}
func (m *MsgCreateScriptureSignatureShareResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateScriptureSignatureShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateScriptureSignatureShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateScriptureSignatureShareResponse proto.InternalMessageInfo

func (m *MsgCreateScriptureSignatureShareResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateSignedScripture struct {
	Witness      string `protobuf:"bytes,1,opt,name=witness,proto3" json:"witness,omitempty"`
	Index        string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Signature    string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	BtcAddress   string `protobuf:"bytes,4,opt,name=btcAddress,proto3" json:"btcAddress,omitempty"`
	MagicKeyId   string `protobuf:"bytes,5,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	SigRequestId uint64 `protobuf:"varint,6,opt,name=sigRequestId,proto3" json:"sigRequestId,omitempty"`
}

func (m *MsgCreateSignedScripture) Reset()         { *m = MsgCreateSignedScripture{} }
func (m *MsgCreateSignedScripture) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignedScripture) ProtoMessage()    {}
func (*MsgCreateSignedScripture) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{40}
}
func (m *MsgCreateSignedScripture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignedScripture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignedScripture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignedScripture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignedScripture.Merge(m, src)
}
func (m *MsgCreateSignedScripture) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignedScripture) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignedScripture.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignedScripture proto.InternalMessageInfo

func (m *MsgCreateSignedScripture) GetWitness() string {
	if m != nil {
		return m.Witness
	}
	return ""
}

func (m *MsgCreateSignedScripture) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateSignedScripture) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *MsgCreateSignedScripture) GetBtcAddress() string {
	if m != nil {
		return m.BtcAddress
	}
	return ""
}

func (m *MsgCreateSignedScripture) GetMagicKeyId() string {
	if m != nil {
		return m.MagicKeyId
	}
	return ""
}

func (m *MsgCreateSignedScripture) GetSigRequestId() uint64 {
	if m != nil {
		return m.SigRequestId
	}
	return 0
}

type MsgCreateSignedScriptureResponse struct {
}

func (m *MsgCreateSignedScriptureResponse) Reset()         { *m = MsgCreateSignedScriptureResponse{} }
func (m *MsgCreateSignedScriptureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignedScriptureResponse) ProtoMessage()    {}
func (*MsgCreateSignedScriptureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{41}
}
func (m *MsgCreateSignedScriptureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignedScriptureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignedScriptureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignedScriptureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignedScriptureResponse.Merge(m, src)
}
func (m *MsgCreateSignedScriptureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignedScriptureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignedScriptureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignedScriptureResponse proto.InternalMessageInfo

type MsgCreateSignedScriptureList struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ScriptureIndex string `protobuf:"bytes,2,opt,name=scriptureIndex,proto3" json:"scriptureIndex,omitempty"`
}

func (m *MsgCreateSignedScriptureList) Reset()         { *m = MsgCreateSignedScriptureList{} }
func (m *MsgCreateSignedScriptureList) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignedScriptureList) ProtoMessage()    {}
func (*MsgCreateSignedScriptureList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{42}
}
func (m *MsgCreateSignedScriptureList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignedScriptureList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignedScriptureList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignedScriptureList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignedScriptureList.Merge(m, src)
}
func (m *MsgCreateSignedScriptureList) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignedScriptureList) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignedScriptureList.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignedScriptureList proto.InternalMessageInfo

func (m *MsgCreateSignedScriptureList) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSignedScriptureList) GetScriptureIndex() string {
	if m != nil {
		return m.ScriptureIndex
	}
	return ""
}

type MsgCreateSignedScriptureListResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSignedScriptureListResponse) Reset()         { *m = MsgCreateSignedScriptureListResponse{} }
func (m *MsgCreateSignedScriptureListResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignedScriptureListResponse) ProtoMessage()    {}
func (*MsgCreateSignedScriptureListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{43}
}
func (m *MsgCreateSignedScriptureListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignedScriptureListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignedScriptureListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignedScriptureListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignedScriptureListResponse.Merge(m, src)
}
func (m *MsgCreateSignedScriptureListResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignedScriptureListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignedScriptureListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignedScriptureListResponse proto.InternalMessageInfo

func (m *MsgCreateSignedScriptureListResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// this line is used by starport scaffolding # proto/tx/message
type MsgCreateBlessing struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgCreateBlessing) Reset()         { *m = MsgCreateBlessing{} }
func (m *MsgCreateBlessing) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBlessing) ProtoMessage()    {}
func (*MsgCreateBlessing) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{44}
}
func (m *MsgCreateBlessing) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBlessing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBlessing.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBlessing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBlessing.Merge(m, src)
}
func (m *MsgCreateBlessing) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBlessing) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBlessing.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBlessing proto.InternalMessageInfo

func (m *MsgCreateBlessing) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateBlessing) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgCreateBlessingResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateBlessingResponse) Reset()         { *m = MsgCreateBlessingResponse{} }
func (m *MsgCreateBlessingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBlessingResponse) ProtoMessage()    {}
func (*MsgCreateBlessingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{45}
}
func (m *MsgCreateBlessingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBlessingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBlessingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBlessingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBlessingResponse.Merge(m, src)
}
func (m *MsgCreateBlessingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBlessingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBlessingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBlessingResponse proto.InternalMessageInfo

func (m *MsgCreateBlessingResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateKillConjuring struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Height   uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Metadata string `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *MsgCreateKillConjuring) Reset()         { *m = MsgCreateKillConjuring{} }
func (m *MsgCreateKillConjuring) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillConjuring) ProtoMessage()    {}
func (*MsgCreateKillConjuring) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{46}
}
func (m *MsgCreateKillConjuring) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillConjuring) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillConjuring.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillConjuring) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillConjuring.Merge(m, src)
}
func (m *MsgCreateKillConjuring) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillConjuring) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillConjuring.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillConjuring proto.InternalMessageInfo

func (m *MsgCreateKillConjuring) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateKillConjuring) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *MsgCreateKillConjuring) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

type MsgCreateKillConjuringResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateKillConjuringResponse) Reset()         { *m = MsgCreateKillConjuringResponse{} }
func (m *MsgCreateKillConjuringResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillConjuringResponse) ProtoMessage()    {}
func (*MsgCreateKillConjuringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{47}
}
func (m *MsgCreateKillConjuringResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillConjuringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillConjuringResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillConjuringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillConjuringResponse.Merge(m, src)
}
func (m *MsgCreateKillConjuringResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillConjuringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillConjuringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillConjuringResponse proto.InternalMessageInfo

func (m *MsgCreateKillConjuringResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateKillImploring struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCreateKillImploring) Reset()         { *m = MsgCreateKillImploring{} }
func (m *MsgCreateKillImploring) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillImploring) ProtoMessage()    {}
func (*MsgCreateKillImploring) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{48}
}
func (m *MsgCreateKillImploring) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillImploring) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillImploring.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillImploring) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillImploring.Merge(m, src)
}
func (m *MsgCreateKillImploring) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillImploring) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillImploring.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillImploring proto.InternalMessageInfo

func (m *MsgCreateKillImploring) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCreateKillImploringResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateKillImploringResponse) Reset()         { *m = MsgCreateKillImploringResponse{} }
func (m *MsgCreateKillImploringResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillImploringResponse) ProtoMessage()    {}
func (*MsgCreateKillImploringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{49}
}
func (m *MsgCreateKillImploringResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillImploringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillImploringResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillImploringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillImploringResponse.Merge(m, src)
}
func (m *MsgCreateKillImploringResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillImploringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillImploringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillImploringResponse proto.InternalMessageInfo

func (m *MsgCreateKillImploringResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateKillMeditationSummoning struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCreateKillMeditationSummoning) Reset()         { *m = MsgCreateKillMeditationSummoning{} }
func (m *MsgCreateKillMeditationSummoning) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillMeditationSummoning) ProtoMessage()    {}
func (*MsgCreateKillMeditationSummoning) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{50}
}
func (m *MsgCreateKillMeditationSummoning) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillMeditationSummoning) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillMeditationSummoning.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillMeditationSummoning) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillMeditationSummoning.Merge(m, src)
}
func (m *MsgCreateKillMeditationSummoning) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillMeditationSummoning) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillMeditationSummoning.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillMeditationSummoning proto.InternalMessageInfo

func (m *MsgCreateKillMeditationSummoning) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCreateKillMeditationSummoningResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateKillMeditationSummoningResponse) Reset() {
	*m = MsgCreateKillMeditationSummoningResponse{}
}
func (m *MsgCreateKillMeditationSummoningResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillMeditationSummoningResponse) ProtoMessage()    {}
func (*MsgCreateKillMeditationSummoningResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{51}
}
func (m *MsgCreateKillMeditationSummoningResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillMeditationSummoningResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillMeditationSummoningResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillMeditationSummoningResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillMeditationSummoningResponse.Merge(m, src)
}
func (m *MsgCreateKillMeditationSummoningResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillMeditationSummoningResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillMeditationSummoningResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillMeditationSummoningResponse proto.InternalMessageInfo

func (m *MsgCreateKillMeditationSummoningResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateKillMagicKeySummoning struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCreateKillMagicKeySummoning) Reset()         { *m = MsgCreateKillMagicKeySummoning{} }
func (m *MsgCreateKillMagicKeySummoning) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillMagicKeySummoning) ProtoMessage()    {}
func (*MsgCreateKillMagicKeySummoning) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{52}
}
func (m *MsgCreateKillMagicKeySummoning) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillMagicKeySummoning) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillMagicKeySummoning.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillMagicKeySummoning) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillMagicKeySummoning.Merge(m, src)
}
func (m *MsgCreateKillMagicKeySummoning) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillMagicKeySummoning) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillMagicKeySummoning.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillMagicKeySummoning proto.InternalMessageInfo

func (m *MsgCreateKillMagicKeySummoning) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCreateKillMagicKeySummoningResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateKillMagicKeySummoningResponse) Reset() {
	*m = MsgCreateKillMagicKeySummoningResponse{}
}
func (m *MsgCreateKillMagicKeySummoningResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillMagicKeySummoningResponse) ProtoMessage()    {}
func (*MsgCreateKillMagicKeySummoningResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{53}
}
func (m *MsgCreateKillMagicKeySummoningResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillMagicKeySummoningResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillMagicKeySummoningResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillMagicKeySummoningResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillMagicKeySummoningResponse.Merge(m, src)
}
func (m *MsgCreateKillMagicKeySummoningResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillMagicKeySummoningResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillMagicKeySummoningResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillMagicKeySummoningResponse proto.InternalMessageInfo

func (m *MsgCreateKillMagicKeySummoningResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateKillScriptureSignatureRequest struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCreateKillScriptureSignatureRequest) Reset() {
	*m = MsgCreateKillScriptureSignatureRequest{}
}
func (m *MsgCreateKillScriptureSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillScriptureSignatureRequest) ProtoMessage()    {}
func (*MsgCreateKillScriptureSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{54}
}
func (m *MsgCreateKillScriptureSignatureRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillScriptureSignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillScriptureSignatureRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillScriptureSignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillScriptureSignatureRequest.Merge(m, src)
}
func (m *MsgCreateKillScriptureSignatureRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillScriptureSignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillScriptureSignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillScriptureSignatureRequest proto.InternalMessageInfo

func (m *MsgCreateKillScriptureSignatureRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCreateKillScriptureSignatureRequestResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateKillScriptureSignatureRequestResponse) Reset() {
	*m = MsgCreateKillScriptureSignatureRequestResponse{}
}
func (m *MsgCreateKillScriptureSignatureRequestResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgCreateKillScriptureSignatureRequestResponse) ProtoMessage() {}
func (*MsgCreateKillScriptureSignatureRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{55}
}
func (m *MsgCreateKillScriptureSignatureRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillScriptureSignatureRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillScriptureSignatureRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillScriptureSignatureRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillScriptureSignatureRequestResponse.Merge(m, src)
}
func (m *MsgCreateKillScriptureSignatureRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillScriptureSignatureRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillScriptureSignatureRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillScriptureSignatureRequestResponse proto.InternalMessageInfo

func (m *MsgCreateKillScriptureSignatureRequestResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateKillSignatureRequest struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCreateKillSignatureRequest) Reset()         { *m = MsgCreateKillSignatureRequest{} }
func (m *MsgCreateKillSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillSignatureRequest) ProtoMessage()    {}
func (*MsgCreateKillSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{56}
}
func (m *MsgCreateKillSignatureRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillSignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillSignatureRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillSignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillSignatureRequest.Merge(m, src)
}
func (m *MsgCreateKillSignatureRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillSignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillSignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillSignatureRequest proto.InternalMessageInfo

func (m *MsgCreateKillSignatureRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCreateKillSignatureRequestResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateKillSignatureRequestResponse) Reset()         { *m = MsgCreateKillSignatureRequestResponse{} }
func (m *MsgCreateKillSignatureRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKillSignatureRequestResponse) ProtoMessage()    {}
func (*MsgCreateKillSignatureRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{57}
}
func (m *MsgCreateKillSignatureRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKillSignatureRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKillSignatureRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKillSignatureRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKillSignatureRequestResponse.Merge(m, src)
}
func (m *MsgCreateKillSignatureRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKillSignatureRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKillSignatureRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKillSignatureRequestResponse proto.InternalMessageInfo

func (m *MsgCreateKillSignatureRequestResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateEncryptedMagicKeyShare struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MagicKeyId string `protobuf:"bytes,2,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	Data       string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *MsgCreateEncryptedMagicKeyShare) Reset()         { *m = MsgCreateEncryptedMagicKeyShare{} }
func (m *MsgCreateEncryptedMagicKeyShare) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEncryptedMagicKeyShare) ProtoMessage()    {}
func (*MsgCreateEncryptedMagicKeyShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{58}
}
func (m *MsgCreateEncryptedMagicKeyShare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEncryptedMagicKeyShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEncryptedMagicKeyShare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEncryptedMagicKeyShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEncryptedMagicKeyShare.Merge(m, src)
}
func (m *MsgCreateEncryptedMagicKeyShare) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEncryptedMagicKeyShare) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEncryptedMagicKeyShare.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEncryptedMagicKeyShare proto.InternalMessageInfo

func (m *MsgCreateEncryptedMagicKeyShare) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateEncryptedMagicKeyShare) GetMagicKeyId() string {
	if m != nil {
		return m.MagicKeyId
	}
	return ""
}

func (m *MsgCreateEncryptedMagicKeyShare) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type MsgCreateEncryptedMagicKeyShareResponse struct {
}

func (m *MsgCreateEncryptedMagicKeyShareResponse) Reset() {
	*m = MsgCreateEncryptedMagicKeyShareResponse{}
}
func (m *MsgCreateEncryptedMagicKeyShareResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEncryptedMagicKeyShareResponse) ProtoMessage()    {}
func (*MsgCreateEncryptedMagicKeyShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{59}
}
func (m *MsgCreateEncryptedMagicKeyShareResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEncryptedMagicKeyShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEncryptedMagicKeyShareResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEncryptedMagicKeyShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEncryptedMagicKeyShareResponse.Merge(m, src)
}
func (m *MsgCreateEncryptedMagicKeyShareResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEncryptedMagicKeyShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEncryptedMagicKeyShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEncryptedMagicKeyShareResponse proto.InternalMessageInfo

type MsgDeleteEncryptedMagicKeyShare struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MagicKeyId string `protobuf:"bytes,2,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
}

func (m *MsgDeleteEncryptedMagicKeyShare) Reset()         { *m = MsgDeleteEncryptedMagicKeyShare{} }
func (m *MsgDeleteEncryptedMagicKeyShare) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEncryptedMagicKeyShare) ProtoMessage()    {}
func (*MsgDeleteEncryptedMagicKeyShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{60}
}
func (m *MsgDeleteEncryptedMagicKeyShare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEncryptedMagicKeyShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEncryptedMagicKeyShare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEncryptedMagicKeyShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEncryptedMagicKeyShare.Merge(m, src)
}
func (m *MsgDeleteEncryptedMagicKeyShare) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEncryptedMagicKeyShare) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEncryptedMagicKeyShare.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEncryptedMagicKeyShare proto.InternalMessageInfo

func (m *MsgDeleteEncryptedMagicKeyShare) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteEncryptedMagicKeyShare) GetMagicKeyId() string {
	if m != nil {
		return m.MagicKeyId
	}
	return ""
}

type MsgDeleteEncryptedMagicKeyShareResponse struct {
}

func (m *MsgDeleteEncryptedMagicKeyShareResponse) Reset() {
	*m = MsgDeleteEncryptedMagicKeyShareResponse{}
}
func (m *MsgDeleteEncryptedMagicKeyShareResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEncryptedMagicKeyShareResponse) ProtoMessage()    {}
func (*MsgDeleteEncryptedMagicKeyShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{61}
}
func (m *MsgDeleteEncryptedMagicKeyShareResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEncryptedMagicKeyShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEncryptedMagicKeyShareResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEncryptedMagicKeyShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEncryptedMagicKeyShareResponse.Merge(m, src)
}
func (m *MsgDeleteEncryptedMagicKeyShareResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEncryptedMagicKeyShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEncryptedMagicKeyShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEncryptedMagicKeyShareResponse proto.InternalMessageInfo

type MsgCreateEncryptedPreSign struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MagicKeyId string `protobuf:"bytes,2,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
	Data       string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *MsgCreateEncryptedPreSign) Reset()         { *m = MsgCreateEncryptedPreSign{} }
func (m *MsgCreateEncryptedPreSign) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEncryptedPreSign) ProtoMessage()    {}
func (*MsgCreateEncryptedPreSign) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{62}
}
func (m *MsgCreateEncryptedPreSign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEncryptedPreSign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEncryptedPreSign.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEncryptedPreSign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEncryptedPreSign.Merge(m, src)
}
func (m *MsgCreateEncryptedPreSign) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEncryptedPreSign) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEncryptedPreSign.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEncryptedPreSign proto.InternalMessageInfo

func (m *MsgCreateEncryptedPreSign) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateEncryptedPreSign) GetMagicKeyId() string {
	if m != nil {
		return m.MagicKeyId
	}
	return ""
}

func (m *MsgCreateEncryptedPreSign) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type MsgCreateEncryptedPreSignResponse struct {
}

func (m *MsgCreateEncryptedPreSignResponse) Reset()         { *m = MsgCreateEncryptedPreSignResponse{} }
func (m *MsgCreateEncryptedPreSignResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEncryptedPreSignResponse) ProtoMessage()    {}
func (*MsgCreateEncryptedPreSignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{63}
}
func (m *MsgCreateEncryptedPreSignResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEncryptedPreSignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEncryptedPreSignResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEncryptedPreSignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEncryptedPreSignResponse.Merge(m, src)
}
func (m *MsgCreateEncryptedPreSignResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEncryptedPreSignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEncryptedPreSignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEncryptedPreSignResponse proto.InternalMessageInfo

type MsgDeleteEncryptedPreSign struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MagicKeyId string `protobuf:"bytes,2,opt,name=magicKeyId,proto3" json:"magicKeyId,omitempty"`
}

func (m *MsgDeleteEncryptedPreSign) Reset()         { *m = MsgDeleteEncryptedPreSign{} }
func (m *MsgDeleteEncryptedPreSign) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEncryptedPreSign) ProtoMessage()    {}
func (*MsgDeleteEncryptedPreSign) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{64}
}
func (m *MsgDeleteEncryptedPreSign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEncryptedPreSign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEncryptedPreSign.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEncryptedPreSign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEncryptedPreSign.Merge(m, src)
}
func (m *MsgDeleteEncryptedPreSign) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEncryptedPreSign) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEncryptedPreSign.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEncryptedPreSign proto.InternalMessageInfo

func (m *MsgDeleteEncryptedPreSign) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteEncryptedPreSign) GetMagicKeyId() string {
	if m != nil {
		return m.MagicKeyId
	}
	return ""
}

type MsgDeleteEncryptedPreSignResponse struct {
}

func (m *MsgDeleteEncryptedPreSignResponse) Reset()         { *m = MsgDeleteEncryptedPreSignResponse{} }
func (m *MsgDeleteEncryptedPreSignResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEncryptedPreSignResponse) ProtoMessage()    {}
func (*MsgDeleteEncryptedPreSignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c249c8951350e204, []int{65}
}
func (m *MsgDeleteEncryptedPreSignResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEncryptedPreSignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEncryptedPreSignResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEncryptedPreSignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEncryptedPreSignResponse.Merge(m, src)
}
func (m *MsgDeleteEncryptedPreSignResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEncryptedPreSignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEncryptedPreSignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEncryptedPreSignResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateMagicKey)(nil), "eightball.eightball.MsgCreateMagicKey")
	proto.RegisterType((*MsgCreateMagicKeyResponse)(nil), "eightball.eightball.MsgCreateMagicKeyResponse")
	proto.RegisterType((*MsgCreateSpiritConjuringPoems)(nil), "eightball.eightball.MsgCreateSpiritConjuringPoems")
	proto.RegisterType((*MsgCreateSpiritConjuringPoemsResponse)(nil), "eightball.eightball.MsgCreateSpiritConjuringPoemsResponse")
	proto.RegisterType((*MsgFinalizeConjuring)(nil), "eightball.eightball.MsgFinalizeConjuring")
	proto.RegisterType((*MsgFinalizeConjuringResponse)(nil), "eightball.eightball.MsgFinalizeConjuringResponse")
	proto.RegisterType((*MsgCreateVerse)(nil), "eightball.eightball.MsgCreateVerse")
	proto.RegisterType((*MsgCreateVerseResponse)(nil), "eightball.eightball.MsgCreateVerseResponse")
	proto.RegisterType((*MsgDeleteVerse)(nil), "eightball.eightball.MsgDeleteVerse")
	proto.RegisterType((*MsgDeleteVerseResponse)(nil), "eightball.eightball.MsgDeleteVerseResponse")
	proto.RegisterType((*MsgCreateVision)(nil), "eightball.eightball.MsgCreateVision")
	proto.RegisterType((*MsgCreateVisionResponse)(nil), "eightball.eightball.MsgCreateVisionResponse")
	proto.RegisterType((*MsgDeleteVision)(nil), "eightball.eightball.MsgDeleteVision")
	proto.RegisterType((*MsgDeleteVisionResponse)(nil), "eightball.eightball.MsgDeleteVisionResponse")
	proto.RegisterType((*MsgCreateMessage)(nil), "eightball.eightball.MsgCreateMessage")
	proto.RegisterType((*MsgCreateMessageResponse)(nil), "eightball.eightball.MsgCreateMessageResponse")
	proto.RegisterType((*MsgCreateSignatureRequest)(nil), "eightball.eightball.MsgCreateSignatureRequest")
	proto.RegisterType((*MsgCreateSignatureRequestResponse)(nil), "eightball.eightball.MsgCreateSignatureRequestResponse")
	proto.RegisterType((*MsgUpdateSignatureRequest)(nil), "eightball.eightball.MsgUpdateSignatureRequest")
	proto.RegisterType((*MsgUpdateSignatureRequestResponse)(nil), "eightball.eightball.MsgUpdateSignatureRequestResponse")
	proto.RegisterType((*MsgDeleteSignatureRequest)(nil), "eightball.eightball.MsgDeleteSignatureRequest")
	proto.RegisterType((*MsgDeleteSignatureRequestResponse)(nil), "eightball.eightball.MsgDeleteSignatureRequestResponse")
	proto.RegisterType((*MsgCreateSignatureShare)(nil), "eightball.eightball.MsgCreateSignatureShare")
	proto.RegisterType((*MsgCreateSignatureShareResponse)(nil), "eightball.eightball.MsgCreateSignatureShareResponse")
	proto.RegisterType((*MsgCreateSignedMessage)(nil), "eightball.eightball.MsgCreateSignedMessage")
	proto.RegisterType((*MsgCreateSignedMessageResponse)(nil), "eightball.eightball.MsgCreateSignedMessageResponse")
	proto.RegisterType((*MsgCreateMeditationSummoning)(nil), "eightball.eightball.MsgCreateMeditationSummoning")
	proto.RegisterType((*MsgCreateMeditationSummoningResponse)(nil), "eightball.eightball.MsgCreateMeditationSummoningResponse")
	proto.RegisterType((*MsgDeleteMeditationSummoning)(nil), "eightball.eightball.MsgDeleteMeditationSummoning")
	proto.RegisterType((*MsgDeleteMeditationSummoningResponse)(nil), "eightball.eightball.MsgDeleteMeditationSummoningResponse")
	proto.RegisterType((*MsgCreateMeditation)(nil), "eightball.eightball.MsgCreateMeditation")
	proto.RegisterType((*MsgCreateMeditationResponse)(nil), "eightball.eightball.MsgCreateMeditationResponse")
	proto.RegisterType((*MsgDeleteMeditation)(nil), "eightball.eightball.MsgDeleteMeditation")
	proto.RegisterType((*MsgDeleteMeditationResponse)(nil), "eightball.eightball.MsgDeleteMeditationResponse")
	proto.RegisterType((*MsgCreateScripture)(nil), "eightball.eightball.MsgCreateScripture")
	proto.RegisterType((*MsgCreateScriptureResponse)(nil), "eightball.eightball.MsgCreateScriptureResponse")
	proto.RegisterType((*MsgCreateScriptureSignatureRequest)(nil), "eightball.eightball.MsgCreateScriptureSignatureRequest")
	proto.RegisterType((*MsgCreateScriptureSignatureRequestResponse)(nil), "eightball.eightball.MsgCreateScriptureSignatureRequestResponse")
	proto.RegisterType((*MsgCreateScriptureSignatureShare)(nil), "eightball.eightball.MsgCreateScriptureSignatureShare")
	proto.RegisterType((*MsgCreateScriptureSignatureShareResponse)(nil), "eightball.eightball.MsgCreateScriptureSignatureShareResponse")
	proto.RegisterType((*MsgCreateSignedScripture)(nil), "eightball.eightball.MsgCreateSignedScripture")
	proto.RegisterType((*MsgCreateSignedScriptureResponse)(nil), "eightball.eightball.MsgCreateSignedScriptureResponse")
	proto.RegisterType((*MsgCreateSignedScriptureList)(nil), "eightball.eightball.MsgCreateSignedScriptureList")
	proto.RegisterType((*MsgCreateSignedScriptureListResponse)(nil), "eightball.eightball.MsgCreateSignedScriptureListResponse")
	proto.RegisterType((*MsgCreateBlessing)(nil), "eightball.eightball.MsgCreateBlessing")
	proto.RegisterType((*MsgCreateBlessingResponse)(nil), "eightball.eightball.MsgCreateBlessingResponse")
	proto.RegisterType((*MsgCreateKillConjuring)(nil), "eightball.eightball.MsgCreateKillConjuring")
	proto.RegisterType((*MsgCreateKillConjuringResponse)(nil), "eightball.eightball.MsgCreateKillConjuringResponse")
	proto.RegisterType((*MsgCreateKillImploring)(nil), "eightball.eightball.MsgCreateKillImploring")
	proto.RegisterType((*MsgCreateKillImploringResponse)(nil), "eightball.eightball.MsgCreateKillImploringResponse")
	proto.RegisterType((*MsgCreateKillMeditationSummoning)(nil), "eightball.eightball.MsgCreateKillMeditationSummoning")
	proto.RegisterType((*MsgCreateKillMeditationSummoningResponse)(nil), "eightball.eightball.MsgCreateKillMeditationSummoningResponse")
	proto.RegisterType((*MsgCreateKillMagicKeySummoning)(nil), "eightball.eightball.MsgCreateKillMagicKeySummoning")
	proto.RegisterType((*MsgCreateKillMagicKeySummoningResponse)(nil), "eightball.eightball.MsgCreateKillMagicKeySummoningResponse")
	proto.RegisterType((*MsgCreateKillScriptureSignatureRequest)(nil), "eightball.eightball.MsgCreateKillScriptureSignatureRequest")
	proto.RegisterType((*MsgCreateKillScriptureSignatureRequestResponse)(nil), "eightball.eightball.MsgCreateKillScriptureSignatureRequestResponse")
	proto.RegisterType((*MsgCreateKillSignatureRequest)(nil), "eightball.eightball.MsgCreateKillSignatureRequest")
	proto.RegisterType((*MsgCreateKillSignatureRequestResponse)(nil), "eightball.eightball.MsgCreateKillSignatureRequestResponse")
	proto.RegisterType((*MsgCreateEncryptedMagicKeyShare)(nil), "eightball.eightball.MsgCreateEncryptedMagicKeyShare")
	proto.RegisterType((*MsgCreateEncryptedMagicKeyShareResponse)(nil), "eightball.eightball.MsgCreateEncryptedMagicKeyShareResponse")
	proto.RegisterType((*MsgDeleteEncryptedMagicKeyShare)(nil), "eightball.eightball.MsgDeleteEncryptedMagicKeyShare")
	proto.RegisterType((*MsgDeleteEncryptedMagicKeyShareResponse)(nil), "eightball.eightball.MsgDeleteEncryptedMagicKeyShareResponse")
	proto.RegisterType((*MsgCreateEncryptedPreSign)(nil), "eightball.eightball.MsgCreateEncryptedPreSign")
	proto.RegisterType((*MsgCreateEncryptedPreSignResponse)(nil), "eightball.eightball.MsgCreateEncryptedPreSignResponse")
	proto.RegisterType((*MsgDeleteEncryptedPreSign)(nil), "eightball.eightball.MsgDeleteEncryptedPreSign")
	proto.RegisterType((*MsgDeleteEncryptedPreSignResponse)(nil), "eightball.eightball.MsgDeleteEncryptedPreSignResponse")
}

func init() { proto.RegisterFile("eightball/eightball/tx.proto", fileDescriptor_c249c8951350e204) }

var fileDescriptor_c249c8951350e204 = []byte{
	// 1881 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0x5f, 0x6f, 0xd4, 0xc6,
	0x16, 0xc7, 0xf9, 0x47, 0xf6, 0xc0, 0x0d, 0xb0, 0x70, 0x73, 0x17, 0x13, 0x96, 0xe0, 0x40, 0x48,
	0x08, 0x59, 0x42, 0x72, 0x03, 0x97, 0x5c, 0x2a, 0x20, 0x81, 0x8a, 0x88, 0xa6, 0x8d, 0x36, 0xa2,
	0xa2, 0xf0, 0xb0, 0xf5, 0xae, 0x87, 0xcd, 0x34, 0x5e, 0x7b, 0xb1, 0xbd, 0x84, 0x20, 0x55, 0xea,
	0x6b, 0xa5, 0x4a, 0xad, 0x2a, 0xf5, 0xa9, 0x7d, 0x69, 0xa5, 0x8a, 0xef, 0xc0, 0x27, 0xe8, 0x43,
	0xa5, 0xf2, 0xd8, 0xc7, 0x0a, 0xde, 0xfb, 0x19, 0x2a, 0x8f, 0xed, 0xf1, 0xd8, 0x9e, 0xf1, 0x9f,
	0x25, 0x7d, 0xeb, 0xdb, 0xce, 0xf8, 0x77, 0xce, 0xf9, 0xcd, 0x39, 0x67, 0xce, 0xcc, 0x99, 0x04,
	0x26, 0x10, 0x6e, 0x6f, 0x3b, 0x4d, 0x55, 0xd7, 0x2f, 0x87, 0xbf, 0x9c, 0xe7, 0xb5, 0xae, 0x65,
	0x3a, 0x66, 0xf9, 0x38, 0x9d, 0xab, 0xd1, 0x5f, 0xf2, 0x14, 0x4f, 0xa4, 0xa3, 0xb6, 0x71, 0xab,
	0xb1, 0x83, 0xf6, 0x3c, 0x49, 0x79, 0x8e, 0x07, 0x6a, 0xf5, 0x2c, 0x0b, 0x19, 0x4e, 0x23, 0x0e,
	0x5e, 0xe0, 0x81, 0xed, 0x2e, 0xb6, 0xb0, 0xd3, 0x68, 0x99, 0xc6, 0x67, 0x3d, 0x0b, 0x1b, 0xed,
	0x46, 0xd7, 0x44, 0x1d, 0xdb, 0x97, 0x38, 0xc3, 0x93, 0x78, 0x86, 0x2c, 0x1b, 0xf9, 0x80, 0x49,
	0x2e, 0x00, 0xdb, 0xd8, 0x34, 0x7c, 0xc4, 0x59, 0xee, 0x32, 0x90, 0x6d, 0xab, 0x6d, 0x94, 0xb6,
	0x08, 0x1b, 0xb7, 0x0d, 0xd5, 0xe9, 0x59, 0xa8, 0x61, 0xa1, 0xa7, 0x3d, 0x64, 0x3b, 0x3e, 0x78,
	0x36, 0x1d, 0x6c, 0x6f, 0xab, 0x56, 0xa0, 0x77, 0x46, 0x04, 0x45, 0x5a, 0x23, 0xca, 0xa0, 0xc6,
	0x27, 0xa9, 0x61, 0x47, 0x75, 0xb0, 0x69, 0x34, 0xec, 0x5e, 0xa7, 0x63, 0x1a, 0xd8, 0x68, 0xfb,
	0xf8, 0x73, 0xe9, 0x78, 0x1f, 0xc5, 0x8d, 0xa0, 0xdd, 0xb2, 0x70, 0xd7, 0xa5, 0xea, 0x83, 0x96,
	0x53, 0x41, 0x0d, 0x91, 0x1b, 0x96, 0xf2, 0x8a, 0xb1, 0x0e, 0xb9, 0x98, 0xe2, 0x90, 0x38, 0xaf,
	0xcb, 0x79, 0xb0, 0x0d, 0x1d, 0x53, 0x46, 0x0a, 0x4f, 0xa0, 0xa9, 0x23, 0xdb, 0x0e, 0xfd, 0xc6,
	0x8d, 0xc8, 0x0e, 0xd6, 0xf5, 0x30, 0xff, 0x32, 0x91, 0xb8, 0xd3, 0xd5, 0x4d, 0x06, 0xb9, 0x24,
	0x44, 0xa6, 0x04, 0x70, 0x51, 0x2c, 0x14, 0x6c, 0x9a, 0x84, 0xcc, 0x8a, 0x50, 0x26, 0x3b, 0x5c,
	0x0b, 0x62, 0xd9, 0x22, 0x01, 0x46, 0x46, 0xcb, 0xda, 0xeb, 0x3a, 0x6e, 0xfe, 0x86, 0x34, 0x99,
	0x00, 0x5f, 0x4a, 0x17, 0xea, 0xfa, 0x0c, 0x3d, 0xb4, 0x32, 0x0f, 0xc7, 0x36, 0xec, 0xf6, 0x9a,
	0x85, 0x54, 0x07, 0x6d, 0xb8, 0xfa, 0xee, 0xa3, 0xbd, 0x72, 0x05, 0x0e, 0xb6, 0xdc, 0x19, 0xd3,
	0xaa, 0x48, 0x93, 0xd2, 0x4c, 0xa9, 0x1e, 0x0c, 0x95, 0x39, 0x38, 0x99, 0x80, 0xd7, 0x91, 0xdd,
	0x35, 0x0d, 0x1b, 0x95, 0xc7, 0x60, 0x00, 0x6b, 0x44, 0x62, 0xa8, 0x3e, 0x80, 0x35, 0xe5, 0x37,
	0x09, 0x4e, 0x53, 0xf4, 0x16, 0xa9, 0x31, 0x6b, 0x41, 0x88, 0x37, 0xdd, 0x0a, 0x23, 0x36, 0x54,
	0xae, 0x02, 0x74, 0x7c, 0xfd, 0xeb, 0x5a, 0x65, 0x80, 0xe8, 0x64, 0x66, 0xca, 0x93, 0x70, 0xa8,
	0xa9, 0x9b, 0xad, 0x9d, 0x7b, 0x64, 0x8d, 0x95, 0x41, 0x02, 0x60, 0xa7, 0xca, 0x65, 0x18, 0x72,
	0xcb, 0x58, 0x65, 0x88, 0x28, 0x26, 0xbf, 0x5d, 0x29, 0x9a, 0x64, 0xeb, 0x5a, 0x65, 0xd8, 0x93,
	0x62, 0xa6, 0xca, 0x13, 0x50, 0xea, 0xa1, 0xa6, 0xbe, 0x69, 0xee, 0x22, 0xab, 0x32, 0x42, 0xbe,
	0x87, 0x13, 0xca, 0x35, 0x38, 0x9f, 0xba, 0x20, 0xa1, 0x2b, 0xea, 0x70, 0x62, 0xc3, 0x6e, 0xbf,
	0x8f, 0x0d, 0x55, 0xc7, 0x2f, 0x10, 0x15, 0x4a, 0x71, 0x40, 0x8c, 0xea, 0x40, 0x82, 0xaa, 0x52,
	0x85, 0x09, 0x9e, 0xce, 0x80, 0x83, 0xf2, 0xc3, 0x00, 0x8c, 0x51, 0xb6, 0x1f, 0xbb, 0x05, 0x3b,
	0xdd, 0xdf, 0x4f, 0x2c, 0xb3, 0xe3, 0x2d, 0x8a, 0x58, 0x2b, 0xd5, 0x99, 0x99, 0xb2, 0x0c, 0xa3,
	0x8e, 0xe9, 0x7f, 0x1d, 0x9c, 0x1c, 0x9c, 0x29, 0xd5, 0xe9, 0xd8, 0xf5, 0xd9, 0x2e, 0xb6, 0xd0,
	0xea, 0x9e, 0x83, 0x6c, 0xdf, 0xdd, 0xe1, 0x84, 0xfb, 0xb5, 0x69, 0x99, 0xaa, 0xd6, 0x52, 0x6d,
	0x87, 0x78, 0x7c, 0xb4, 0x1e, 0x4e, 0x94, 0x4f, 0xc0, 0xb0, 0x63, 0x7e, 0xa4, 0x6b, 0xc4, 0xd7,
	0xa3, 0x75, 0x6f, 0xe0, 0x2e, 0x9e, 0xfc, 0xb8, 0x6d, 0x68, 0x1f, 0xa2, 0xdd, 0xca, 0x41, 0xf2,
	0x8d, 0x9d, 0x8a, 0xe5, 0xc7, 0x28, 0x2f, 0x3f, 0xe8, 0xde, 0x5d, 0xd7, 0x2a, 0x25, 0xcf, 0x7d,
	0xcc, 0x94, 0x32, 0x03, 0xe3, 0x51, 0xef, 0x08, 0x83, 0xf7, 0x88, 0xf8, 0xf1, 0x0e, 0xd2, 0x51,
	0x2e, 0x3f, 0xa6, 0xe6, 0xad, 0xa7, 0x7b, 0x90, 0xea, 0xae, 0x10, 0x16, 0x8c, 0x6e, 0x1a, 0xbe,
	0x9f, 0x25, 0x38, 0x12, 0x12, 0x24, 0xc7, 0xe9, 0x3b, 0xd8, 0x95, 0x61, 0x14, 0xb5, 0x36, 0x4d,
	0x6c, 0x38, 0x0f, 0x89, 0xf5, 0x52, 0x9d, 0x8e, 0x99, 0x6f, 0x9f, 0xf8, 0xe1, 0xa3, 0xe3, 0xb8,
	0x1f, 0x87, 0x93, 0x7e, 0x9c, 0x85, 0xff, 0xc4, 0x68, 0x0a, 0x1d, 0xf9, 0x98, 0xac, 0xc8, 0x5f,
	0xec, 0xbb, 0xae, 0x28, 0xee, 0xc9, 0x93, 0x84, 0x07, 0xab, 0x9c, 0xba, 0xf2, 0x16, 0x1c, 0x0d,
	0xab, 0x96, 0x77, 0xe8, 0xa7, 0x18, 0x2e, 0xc3, 0x50, 0xd3, 0xd4, 0xf6, 0xfc, 0x4d, 0x40, 0x7e,
	0x2b, 0x17, 0xa1, 0x12, 0xd7, 0x20, 0x5c, 0xe5, 0x16, 0x53, 0x23, 0xb7, 0x82, 0xca, 0x5e, 0xf7,
	0x0a, 0x7b, 0x8a, 0xd9, 0x09, 0x28, 0xf9, 0x17, 0x12, 0xba, 0xdc, 0x70, 0x42, 0x59, 0x82, 0xb3,
	0x42, 0xa5, 0x42, 0x26, 0x2d, 0xc2, 0xe4, 0x41, 0x57, 0x2b, 0xc6, 0xc4, 0x53, 0x33, 0x10, 0xa8,
	0x89, 0x32, 0x1b, 0x8c, 0x33, 0x9b, 0x22, 0xcc, 0xf8, 0x46, 0x68, 0x04, 0xee, 0x12, 0x26, 0x5e,
	0x70, 0xfa, 0x67, 0xe2, 0xdb, 0xe2, 0xab, 0xa1, 0xb6, 0x5e, 0x4a, 0x4c, 0x46, 0x52, 0xd4, 0x96,
	0x7b, 0x44, 0xf6, 0xeb, 0x7e, 0xf7, 0x2b, 0x39, 0x63, 0xef, 0xa8, 0x8e, 0xea, 0xef, 0x9f, 0x70,
	0x22, 0x96, 0xaa, 0x43, 0x89, 0x54, 0x1d, 0x87, 0x91, 0x6e, 0xaf, 0x79, 0x1f, 0xed, 0x91, 0xfd,
	0x53, 0xaa, 0xfb, 0x23, 0xe5, 0x0a, 0x9c, 0x11, 0x10, 0x15, 0x86, 0xf4, 0x4f, 0x89, 0x29, 0x5b,
	0x5b, 0xe4, 0x2a, 0xd6, 0x57, 0x46, 0x93, 0x15, 0x05, 0x26, 0xe9, 0x8a, 0x82, 0x89, 0xf2, 0x34,
	0x8c, 0x35, 0xb1, 0xd3, 0x32, 0xb1, 0x71, 0x5b, 0xd3, 0x2c, 0x64, 0x07, 0x75, 0x3d, 0x36, 0x1b,
	0xf5, 0xda, 0x70, 0xdc, 0x6b, 0x0a, 0x1c, 0xb6, 0x71, 0xdb, 0x8f, 0xcf, 0xba, 0xe6, 0x9f, 0xa7,
	0x91, 0xb9, 0x98, 0xef, 0x0e, 0xc6, 0x7d, 0xa7, 0x2c, 0x40, 0x95, 0xbf, 0x5e, 0xa1, 0x8b, 0x1e,
	0x92, 0x73, 0x31, 0xd8, 0xab, 0xc1, 0xf5, 0x6f, 0x2b, 0x28, 0x59, 0xfd, 0x97, 0x1c, 0xe5, 0x2a,
	0x9c, 0x4b, 0xd3, 0x2c, 0x64, 0x74, 0x8f, 0x30, 0xf2, 0xd2, 0xb6, 0x18, 0xa3, 0xf8, 0x06, 0x98,
	0x26, 0x0c, 0x84, 0x9a, 0xe8, 0x1e, 0xf8, 0x71, 0x00, 0x8e, 0x73, 0xa8, 0xfe, 0x73, 0x01, 0x60,
	0x0e, 0xae, 0x79, 0x38, 0xc5, 0x71, 0x91, 0x30, 0x88, 0x37, 0x89, 0x47, 0xe3, 0xae, 0x2f, 0x10,
	0xbb, 0xd3, 0xc4, 0x5e, 0x5c, 0x01, 0x0d, 0xd9, 0x2b, 0x09, 0xca, 0x61, 0xa6, 0x07, 0xdd, 0x84,
	0xab, 0x7f, 0x17, 0x3b, 0x86, 0xbb, 0x05, 0x7d, 0xfd, 0xfe, 0xd0, 0xf5, 0x1c, 0x36, 0x34, 0xf4,
	0xdc, 0x0f, 0x96, 0x37, 0x70, 0xf7, 0xfa, 0xb6, 0x6a, 0x6f, 0xfb, 0x5b, 0x9a, 0xfc, 0x76, 0x63,
	0xa7, 0x9b, 0x2d, 0x62, 0x2e, 0x38, 0xe0, 0x83, 0xb1, 0xab, 0x5f, 0xf5, 0xb7, 0xb8, 0x57, 0x9c,
	0x82, 0xa1, 0xab, 0x5f, 0xd5, 0xb1, 0x6a, 0x93, 0xc8, 0x94, 0xea, 0xde, 0xc0, 0x9d, 0x7d, 0xa6,
	0xea, 0x3d, 0x44, 0x62, 0x52, 0xaa, 0x7b, 0x03, 0x65, 0x02, 0xe4, 0x24, 0x77, 0xba, 0xb4, 0x27,
	0xa0, 0x24, 0xbf, 0x16, 0x38, 0x06, 0xa6, 0x61, 0x8c, 0xb6, 0x57, 0xeb, 0xcc, 0x92, 0x63, 0xb3,
	0xca, 0x0d, 0xb8, 0x98, 0x6d, 0x47, 0x18, 0xe0, 0x57, 0x12, 0x4c, 0xa6, 0x88, 0x67, 0x1d, 0x20,
	0x39, 0x49, 0xfe, 0x4d, 0x47, 0xc9, 0x0a, 0xcc, 0x64, 0x71, 0x17, 0x2e, 0xfc, 0x57, 0x89, 0xb9,
	0xdd, 0x78, 0x35, 0xb6, 0xff, 0xfc, 0x4b, 0x3f, 0x57, 0xaa, 0x00, 0x4d, 0xa7, 0x15, 0x3d, 0x53,
	0x98, 0x99, 0xd8, 0xf2, 0xbd, 0x25, 0xb2, 0xcb, 0xcf, 0x71, 0xa2, 0x28, 0x0a, 0x1b, 0xc6, 0xe8,
	0x6a, 0x68, 0x46, 0x7e, 0xca, 0x9c, 0x11, 0x31, 0xcc, 0x07, 0x78, 0x5f, 0x72, 0x91, 0x3d, 0x2b,
	0x38, 0x16, 0x84, 0xc1, 0x58, 0x63, 0x1a, 0xf2, 0x55, 0xff, 0xe5, 0x24, 0x85, 0x0e, 0x37, 0x08,
	0x91, 0x36, 0x3d, 0x50, 0x22, 0xb4, 0xf8, 0x84, 0xb9, 0x51, 0xdc, 0xc7, 0xba, 0x9e, 0xa7, 0x3b,
	0x1d, 0x87, 0x91, 0x6d, 0xaf, 0xf3, 0xf6, 0xea, 0x9b, 0x3f, 0x72, 0x2b, 0x4d, 0x07, 0x39, 0xaa,
	0x16, 0xe6, 0x36, 0x1d, 0x47, 0x4e, 0xf2, 0x88, 0x1d, 0x21, 0xb3, 0xc5, 0x18, 0xb3, 0xf5, 0xe0,
	0xd9, 0x27, 0xe5, 0x85, 0x22, 0x6e, 0x85, 0xca, 0x08, 0xad, 0xdc, 0x60, 0xf2, 0xc5, 0x95, 0x28,
	0x74, 0x42, 0x47, 0x36, 0x9e, 0x40, 0x5a, 0x68, 0x79, 0x25, 0xc6, 0x35, 0x78, 0x51, 0xc9, 0x63,
	0xf7, 0x7f, 0x30, 0x9d, 0x2e, 0x2b, 0xb4, 0xba, 0x1a, 0x93, 0xec, 0xa3, 0x22, 0x2b, 0xb7, 0xa0,
	0x96, 0x4f, 0x87, 0x90, 0xc5, 0x75, 0xe6, 0x6d, 0x88, 0x68, 0xc8, 0x6f, 0x9c, 0x7d, 0x85, 0xe1,
	0x89, 0x0a, 0x6d, 0x9a, 0xcc, 0x7d, 0xfb, 0x6e, 0xf0, 0x22, 0x46, 0x1d, 0x97, 0x51, 0xdf, 0x93,
	0x97, 0xc3, 0x68, 0x69, 0x2a, 0xc3, 0x10, 0x93, 0xf6, 0xe4, 0xb7, 0x32, 0x0b, 0x17, 0x32, 0x0c,
	0xd2, 0x8a, 0xf4, 0x98, 0x70, 0xf3, 0x6e, 0x07, 0xfb, 0xcd, 0xcd, 0xe7, 0x91, 0xa6, 0x9c, 0xf2,
	0xc0, 0x4c, 0xe9, 0xa0, 0xd0, 0x4d, 0x2f, 0xb0, 0xfb, 0xec, 0x9d, 0x29, 0xa6, 0xa7, 0x8d, 0x9b,
	0xa2, 0x7c, 0x1e, 0x30, 0x9d, 0xe3, 0xfe, 0xf1, 0x89, 0x74, 0x92, 0x22, 0xdb, 0x8b, 0x3f, 0xc9,
	0x30, 0xb8, 0x61, 0xb7, 0xcb, 0xdb, 0x30, 0x16, 0x7b, 0x21, 0x9d, 0xae, 0x71, 0xfe, 0x5c, 0x53,
	0x4b, 0x3c, 0x8d, 0xca, 0xb5, 0x7c, 0x38, 0x9a, 0xb1, 0x5f, 0x49, 0x20, 0xa7, 0xbc, 0x97, 0x2e,
	0xa6, 0xab, 0xe3, 0xc9, 0xc8, 0x2b, 0xc5, 0x65, 0x28, 0x9d, 0xa7, 0x70, 0x2c, 0xf9, 0x66, 0x39,
	0x2b, 0x52, 0x98, 0x80, 0xca, 0x57, 0x72, 0x43, 0xa9, 0xc9, 0x06, 0x1c, 0x62, 0x5f, 0x2c, 0xa7,
	0xd2, 0xd9, 0x13, 0x90, 0x3c, 0x97, 0x03, 0x44, 0x0d, 0x34, 0xe1, 0x70, 0xe4, 0x4d, 0xed, 0x5c,
	0x86, 0x30, 0x41, 0xc9, 0x97, 0xf2, 0xa0, 0xa8, 0x0d, 0x04, 0xff, 0x8a, 0xbe, 0x36, 0x9d, 0xcf,
	0xc8, 0x03, 0x0f, 0x26, 0xcf, 0xe7, 0x82, 0x51, 0x33, 0x5f, 0x48, 0x30, 0x2e, 0x78, 0x67, 0xca,
	0x48, 0xbc, 0x38, 0x5e, 0xbe, 0x5a, 0x0c, 0x4f, 0x29, 0xbc, 0x80, 0x13, 0xdc, 0x87, 0x96, 0x4b,
	0x39, 0xf5, 0x11, 0xb4, 0xfc, 0xdf, 0x22, 0x68, 0x6a, 0x7b, 0x17, 0x8e, 0xf3, 0xde, 0x41, 0xe6,
	0xb2, 0x95, 0x51, 0xb0, 0xbc, 0x54, 0x00, 0x4c, 0x0d, 0x1b, 0x70, 0x34, 0xd1, 0x59, 0xcf, 0x64,
	0x85, 0x2e, 0x40, 0xca, 0x0b, 0x79, 0x91, 0xd4, 0xde, 0x0e, 0x1c, 0x89, 0xb7, 0x85, 0x17, 0x32,
	0x78, 0x07, 0x40, 0xf9, 0x72, 0x4e, 0x20, 0x35, 0xf6, 0xbd, 0x04, 0x67, 0xb2, 0x5a, 0xb5, 0x6b,
	0x39, 0x95, 0x26, 0xd2, 0xec, 0x66, 0x9f, 0x82, 0x94, 0xdd, 0x77, 0x12, 0x9c, 0x4e, 0xef, 0xd0,
	0x96, 0x8b, 0x9a, 0xf0, 0x52, 0xf0, 0xbd, 0xbe, 0xc4, 0x28, 0xaf, 0xcf, 0xe1, 0xdf, 0xfc, 0xfe,
	0x69, 0x3e, 0x4f, 0x82, 0x85, 0xe1, 0x5a, 0x2e, 0x04, 0xa7, 0xe6, 0xbf, 0x94, 0xe0, 0xa4, 0xb8,
	0x9b, 0xb9, 0x52, 0x48, 0xa9, 0x2b, 0x22, 0x5f, 0x2f, 0x2c, 0x42, 0xb9, 0xd0, 0xd3, 0x92, 0xb6,
	0x2f, 0x19, 0xa7, 0x65, 0x80, 0xcb, 0x3a, 0x2d, 0x13, 0x9d, 0x0c, 0x2d, 0x00, 0xd1, 0xb6, 0x25,
	0xa3, 0x00, 0x44, 0xc0, 0x59, 0x05, 0x80, 0xdf, 0xa8, 0x44, 0x0c, 0x87, 0x5d, 0x49, 0x0e, 0xc3,
	0x14, 0x9c, 0xc7, 0x70, 0xb2, 0x77, 0x09, 0xd3, 0x5f, 0xd4, 0xa9, 0x2c, 0x67, 0xab, 0xe5, 0x88,
	0x65, 0xa5, 0x7f, 0x56, 0x67, 0xf3, 0xb5, 0x04, 0xa7, 0xd2, 0xfa, 0x98, 0x1c, 0x8b, 0x4d, 0x08,
	0xc9, 0xff, 0xef, 0x43, 0x88, 0x32, 0x7a, 0x29, 0xc1, 0x54, 0x9e, 0x1e, 0x27, 0x87, 0x11, 0x71,
	0x39, 0x5b, 0x7b, 0x07, 0x61, 0xce, 0x9d, 0x8f, 0xdb, 0x07, 0x2d, 0xe6, 0xb0, 0x11, 0xe7, 0xb5,
	0x52, 0x5c, 0x86, 0xd2, 0xf9, 0x56, 0x82, 0x89, 0xd4, 0x16, 0x29, 0xe3, 0xb0, 0xe6, 0x4b, 0xc9,
	0x37, 0xfa, 0x91, 0x8a, 0x90, 0x4a, 0xed, 0x8d, 0x84, 0xa4, 0xd2, 0xa4, 0xc4, 0xa4, 0xf2, 0xb4,
	0x4a, 0xcc, 0xf5, 0x2b, 0xd1, 0x98, 0xd4, 0x72, 0xae, 0xd6, 0xc7, 0x67, 0x5d, 0xbf, 0x44, 0x1d,
	0x0a, 0xa1, 0x20, 0xe8, 0x8d, 0x6a, 0x39, 0xd7, 0x96, 0x49, 0x21, 0xbd, 0x49, 0x5a, 0x5d, 0xfe,
	0xe5, 0x4d, 0x55, 0x7a, 0xfd, 0xa6, 0x2a, 0xfd, 0xf1, 0xa6, 0x2a, 0x7d, 0xf3, 0xb6, 0x7a, 0xe0,
	0xf5, 0xdb, 0xea, 0x81, 0xdf, 0xdf, 0x56, 0x0f, 0x3c, 0x3a, 0x15, 0xfe, 0xff, 0xc9, 0x73, 0xf6,
	0x5f, 0xde, 0xf6, 0xba, 0xc8, 0x6e, 0x8e, 0x90, 0xff, 0x3f, 0x59, 0xfa, 0x2b, 0x00, 0x00, 0xff,
	0xff, 0x9d, 0xc9, 0x03, 0xb5, 0x16, 0x27, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateMagicKey(ctx context.Context, in *MsgCreateMagicKey, opts ...grpc.CallOption) (*MsgCreateMagicKeyResponse, error)
	CreateSpiritConjuringPoems(ctx context.Context, in *MsgCreateSpiritConjuringPoems, opts ...grpc.CallOption) (*MsgCreateSpiritConjuringPoemsResponse, error)
	FinalizeConjuring(ctx context.Context, in *MsgFinalizeConjuring, opts ...grpc.CallOption) (*MsgFinalizeConjuringResponse, error)
	CreateVerse(ctx context.Context, in *MsgCreateVerse, opts ...grpc.CallOption) (*MsgCreateVerseResponse, error)
	CreateVision(ctx context.Context, in *MsgCreateVision, opts ...grpc.CallOption) (*MsgCreateVisionResponse, error)
	CreateMessage(ctx context.Context, in *MsgCreateMessage, opts ...grpc.CallOption) (*MsgCreateMessageResponse, error)
	CreateSignatureRequest(ctx context.Context, in *MsgCreateSignatureRequest, opts ...grpc.CallOption) (*MsgCreateSignatureRequestResponse, error)
	CreateSignatureShare(ctx context.Context, in *MsgCreateSignatureShare, opts ...grpc.CallOption) (*MsgCreateSignatureShareResponse, error)
	CreateSignedMessage(ctx context.Context, in *MsgCreateSignedMessage, opts ...grpc.CallOption) (*MsgCreateSignedMessageResponse, error)
	CreateMeditation(ctx context.Context, in *MsgCreateMeditation, opts ...grpc.CallOption) (*MsgCreateMeditationResponse, error)
	CreateScripture(ctx context.Context, in *MsgCreateScripture, opts ...grpc.CallOption) (*MsgCreateScriptureResponse, error)
	CreateScriptureSignatureRequest(ctx context.Context, in *MsgCreateScriptureSignatureRequest, opts ...grpc.CallOption) (*MsgCreateScriptureSignatureRequestResponse, error)
	CreateScriptureSignatureShare(ctx context.Context, in *MsgCreateScriptureSignatureShare, opts ...grpc.CallOption) (*MsgCreateScriptureSignatureShareResponse, error)
	CreateSignedScripture(ctx context.Context, in *MsgCreateSignedScripture, opts ...grpc.CallOption) (*MsgCreateSignedScriptureResponse, error)
	CreateSignedScriptureList(ctx context.Context, in *MsgCreateSignedScriptureList, opts ...grpc.CallOption) (*MsgCreateSignedScriptureListResponse, error)
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateBlessing(ctx context.Context, in *MsgCreateBlessing, opts ...grpc.CallOption) (*MsgCreateBlessingResponse, error)
	CreateKillConjuring(ctx context.Context, in *MsgCreateKillConjuring, opts ...grpc.CallOption) (*MsgCreateKillConjuringResponse, error)
	CreateKillImploring(ctx context.Context, in *MsgCreateKillImploring, opts ...grpc.CallOption) (*MsgCreateKillImploringResponse, error)
	CreateKillMeditationSummoning(ctx context.Context, in *MsgCreateKillMeditationSummoning, opts ...grpc.CallOption) (*MsgCreateKillMeditationSummoningResponse, error)
	CreateKillMagicKeySummoning(ctx context.Context, in *MsgCreateKillMagicKeySummoning, opts ...grpc.CallOption) (*MsgCreateKillMagicKeySummoningResponse, error)
	CreateKillScriptureSignatureRequest(ctx context.Context, in *MsgCreateKillScriptureSignatureRequest, opts ...grpc.CallOption) (*MsgCreateKillScriptureSignatureRequestResponse, error)
	CreateKillSignatureRequest(ctx context.Context, in *MsgCreateKillSignatureRequest, opts ...grpc.CallOption) (*MsgCreateKillSignatureRequestResponse, error)
	CreateEncryptedMagicKeyShare(ctx context.Context, in *MsgCreateEncryptedMagicKeyShare, opts ...grpc.CallOption) (*MsgCreateEncryptedMagicKeyShareResponse, error)
	DeleteEncryptedMagicKeyShare(ctx context.Context, in *MsgDeleteEncryptedMagicKeyShare, opts ...grpc.CallOption) (*MsgDeleteEncryptedMagicKeyShareResponse, error)
	CreateEncryptedPreSign(ctx context.Context, in *MsgCreateEncryptedPreSign, opts ...grpc.CallOption) (*MsgCreateEncryptedPreSignResponse, error)
	DeleteEncryptedPreSign(ctx context.Context, in *MsgDeleteEncryptedPreSign, opts ...grpc.CallOption) (*MsgDeleteEncryptedPreSignResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateMagicKey(ctx context.Context, in *MsgCreateMagicKey, opts ...grpc.CallOption) (*MsgCreateMagicKeyResponse, error) {
	out := new(MsgCreateMagicKeyResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateMagicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSpiritConjuringPoems(ctx context.Context, in *MsgCreateSpiritConjuringPoems, opts ...grpc.CallOption) (*MsgCreateSpiritConjuringPoemsResponse, error) {
	out := new(MsgCreateSpiritConjuringPoemsResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateSpiritConjuringPoems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FinalizeConjuring(ctx context.Context, in *MsgFinalizeConjuring, opts ...grpc.CallOption) (*MsgFinalizeConjuringResponse, error) {
	out := new(MsgFinalizeConjuringResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/FinalizeConjuring", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateVerse(ctx context.Context, in *MsgCreateVerse, opts ...grpc.CallOption) (*MsgCreateVerseResponse, error) {
	out := new(MsgCreateVerseResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateVerse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateVision(ctx context.Context, in *MsgCreateVision, opts ...grpc.CallOption) (*MsgCreateVisionResponse, error) {
	out := new(MsgCreateVisionResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateVision", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMessage(ctx context.Context, in *MsgCreateMessage, opts ...grpc.CallOption) (*MsgCreateMessageResponse, error) {
	out := new(MsgCreateMessageResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSignatureRequest(ctx context.Context, in *MsgCreateSignatureRequest, opts ...grpc.CallOption) (*MsgCreateSignatureRequestResponse, error) {
	out := new(MsgCreateSignatureRequestResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateSignatureRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSignatureShare(ctx context.Context, in *MsgCreateSignatureShare, opts ...grpc.CallOption) (*MsgCreateSignatureShareResponse, error) {
	out := new(MsgCreateSignatureShareResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateSignatureShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSignedMessage(ctx context.Context, in *MsgCreateSignedMessage, opts ...grpc.CallOption) (*MsgCreateSignedMessageResponse, error) {
	out := new(MsgCreateSignedMessageResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateSignedMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMeditation(ctx context.Context, in *MsgCreateMeditation, opts ...grpc.CallOption) (*MsgCreateMeditationResponse, error) {
	out := new(MsgCreateMeditationResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateMeditation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateScripture(ctx context.Context, in *MsgCreateScripture, opts ...grpc.CallOption) (*MsgCreateScriptureResponse, error) {
	out := new(MsgCreateScriptureResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateScripture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateScriptureSignatureRequest(ctx context.Context, in *MsgCreateScriptureSignatureRequest, opts ...grpc.CallOption) (*MsgCreateScriptureSignatureRequestResponse, error) {
	out := new(MsgCreateScriptureSignatureRequestResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateScriptureSignatureRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateScriptureSignatureShare(ctx context.Context, in *MsgCreateScriptureSignatureShare, opts ...grpc.CallOption) (*MsgCreateScriptureSignatureShareResponse, error) {
	out := new(MsgCreateScriptureSignatureShareResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateScriptureSignatureShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSignedScripture(ctx context.Context, in *MsgCreateSignedScripture, opts ...grpc.CallOption) (*MsgCreateSignedScriptureResponse, error) {
	out := new(MsgCreateSignedScriptureResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateSignedScripture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSignedScriptureList(ctx context.Context, in *MsgCreateSignedScriptureList, opts ...grpc.CallOption) (*MsgCreateSignedScriptureListResponse, error) {
	out := new(MsgCreateSignedScriptureListResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateSignedScriptureList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateBlessing(ctx context.Context, in *MsgCreateBlessing, opts ...grpc.CallOption) (*MsgCreateBlessingResponse, error) {
	out := new(MsgCreateBlessingResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateBlessing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateKillConjuring(ctx context.Context, in *MsgCreateKillConjuring, opts ...grpc.CallOption) (*MsgCreateKillConjuringResponse, error) {
	out := new(MsgCreateKillConjuringResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateKillConjuring", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateKillImploring(ctx context.Context, in *MsgCreateKillImploring, opts ...grpc.CallOption) (*MsgCreateKillImploringResponse, error) {
	out := new(MsgCreateKillImploringResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateKillImploring", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateKillMeditationSummoning(ctx context.Context, in *MsgCreateKillMeditationSummoning, opts ...grpc.CallOption) (*MsgCreateKillMeditationSummoningResponse, error) {
	out := new(MsgCreateKillMeditationSummoningResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateKillMeditationSummoning", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateKillMagicKeySummoning(ctx context.Context, in *MsgCreateKillMagicKeySummoning, opts ...grpc.CallOption) (*MsgCreateKillMagicKeySummoningResponse, error) {
	out := new(MsgCreateKillMagicKeySummoningResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateKillMagicKeySummoning", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateKillScriptureSignatureRequest(ctx context.Context, in *MsgCreateKillScriptureSignatureRequest, opts ...grpc.CallOption) (*MsgCreateKillScriptureSignatureRequestResponse, error) {
	out := new(MsgCreateKillScriptureSignatureRequestResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateKillScriptureSignatureRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateKillSignatureRequest(ctx context.Context, in *MsgCreateKillSignatureRequest, opts ...grpc.CallOption) (*MsgCreateKillSignatureRequestResponse, error) {
	out := new(MsgCreateKillSignatureRequestResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateKillSignatureRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateEncryptedMagicKeyShare(ctx context.Context, in *MsgCreateEncryptedMagicKeyShare, opts ...grpc.CallOption) (*MsgCreateEncryptedMagicKeyShareResponse, error) {
	out := new(MsgCreateEncryptedMagicKeyShareResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateEncryptedMagicKeyShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteEncryptedMagicKeyShare(ctx context.Context, in *MsgDeleteEncryptedMagicKeyShare, opts ...grpc.CallOption) (*MsgDeleteEncryptedMagicKeyShareResponse, error) {
	out := new(MsgDeleteEncryptedMagicKeyShareResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/DeleteEncryptedMagicKeyShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateEncryptedPreSign(ctx context.Context, in *MsgCreateEncryptedPreSign, opts ...grpc.CallOption) (*MsgCreateEncryptedPreSignResponse, error) {
	out := new(MsgCreateEncryptedPreSignResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/CreateEncryptedPreSign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteEncryptedPreSign(ctx context.Context, in *MsgDeleteEncryptedPreSign, opts ...grpc.CallOption) (*MsgDeleteEncryptedPreSignResponse, error) {
	out := new(MsgDeleteEncryptedPreSignResponse)
	err := c.cc.Invoke(ctx, "/eightball.eightball.Msg/DeleteEncryptedPreSign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateMagicKey(context.Context, *MsgCreateMagicKey) (*MsgCreateMagicKeyResponse, error)
	CreateSpiritConjuringPoems(context.Context, *MsgCreateSpiritConjuringPoems) (*MsgCreateSpiritConjuringPoemsResponse, error)
	FinalizeConjuring(context.Context, *MsgFinalizeConjuring) (*MsgFinalizeConjuringResponse, error)
	CreateVerse(context.Context, *MsgCreateVerse) (*MsgCreateVerseResponse, error)
	CreateVision(context.Context, *MsgCreateVision) (*MsgCreateVisionResponse, error)
	CreateMessage(context.Context, *MsgCreateMessage) (*MsgCreateMessageResponse, error)
	CreateSignatureRequest(context.Context, *MsgCreateSignatureRequest) (*MsgCreateSignatureRequestResponse, error)
	CreateSignatureShare(context.Context, *MsgCreateSignatureShare) (*MsgCreateSignatureShareResponse, error)
	CreateSignedMessage(context.Context, *MsgCreateSignedMessage) (*MsgCreateSignedMessageResponse, error)
	CreateMeditation(context.Context, *MsgCreateMeditation) (*MsgCreateMeditationResponse, error)
	CreateScripture(context.Context, *MsgCreateScripture) (*MsgCreateScriptureResponse, error)
	CreateScriptureSignatureRequest(context.Context, *MsgCreateScriptureSignatureRequest) (*MsgCreateScriptureSignatureRequestResponse, error)
	CreateScriptureSignatureShare(context.Context, *MsgCreateScriptureSignatureShare) (*MsgCreateScriptureSignatureShareResponse, error)
	CreateSignedScripture(context.Context, *MsgCreateSignedScripture) (*MsgCreateSignedScriptureResponse, error)
	CreateSignedScriptureList(context.Context, *MsgCreateSignedScriptureList) (*MsgCreateSignedScriptureListResponse, error)
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateBlessing(context.Context, *MsgCreateBlessing) (*MsgCreateBlessingResponse, error)
	CreateKillConjuring(context.Context, *MsgCreateKillConjuring) (*MsgCreateKillConjuringResponse, error)
	CreateKillImploring(context.Context, *MsgCreateKillImploring) (*MsgCreateKillImploringResponse, error)
	CreateKillMeditationSummoning(context.Context, *MsgCreateKillMeditationSummoning) (*MsgCreateKillMeditationSummoningResponse, error)
	CreateKillMagicKeySummoning(context.Context, *MsgCreateKillMagicKeySummoning) (*MsgCreateKillMagicKeySummoningResponse, error)
	CreateKillScriptureSignatureRequest(context.Context, *MsgCreateKillScriptureSignatureRequest) (*MsgCreateKillScriptureSignatureRequestResponse, error)
	CreateKillSignatureRequest(context.Context, *MsgCreateKillSignatureRequest) (*MsgCreateKillSignatureRequestResponse, error)
	CreateEncryptedMagicKeyShare(context.Context, *MsgCreateEncryptedMagicKeyShare) (*MsgCreateEncryptedMagicKeyShareResponse, error)
	DeleteEncryptedMagicKeyShare(context.Context, *MsgDeleteEncryptedMagicKeyShare) (*MsgDeleteEncryptedMagicKeyShareResponse, error)
	CreateEncryptedPreSign(context.Context, *MsgCreateEncryptedPreSign) (*MsgCreateEncryptedPreSignResponse, error)
	DeleteEncryptedPreSign(context.Context, *MsgDeleteEncryptedPreSign) (*MsgDeleteEncryptedPreSignResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateMagicKey(ctx context.Context, req *MsgCreateMagicKey) (*MsgCreateMagicKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMagicKey not implemented")
}
func (*UnimplementedMsgServer) CreateSpiritConjuringPoems(ctx context.Context, req *MsgCreateSpiritConjuringPoems) (*MsgCreateSpiritConjuringPoemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSpiritConjuringPoems not implemented")
}
func (*UnimplementedMsgServer) FinalizeConjuring(ctx context.Context, req *MsgFinalizeConjuring) (*MsgFinalizeConjuringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalizeConjuring not implemented")
}
func (*UnimplementedMsgServer) CreateVerse(ctx context.Context, req *MsgCreateVerse) (*MsgCreateVerseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVerse not implemented")
}
func (*UnimplementedMsgServer) CreateVision(ctx context.Context, req *MsgCreateVision) (*MsgCreateVisionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVision not implemented")
}
func (*UnimplementedMsgServer) CreateMessage(ctx context.Context, req *MsgCreateMessage) (*MsgCreateMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMessage not implemented")
}
func (*UnimplementedMsgServer) CreateSignatureRequest(ctx context.Context, req *MsgCreateSignatureRequest) (*MsgCreateSignatureRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSignatureRequest not implemented")
}
func (*UnimplementedMsgServer) CreateSignatureShare(ctx context.Context, req *MsgCreateSignatureShare) (*MsgCreateSignatureShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSignatureShare not implemented")
}
func (*UnimplementedMsgServer) CreateSignedMessage(ctx context.Context, req *MsgCreateSignedMessage) (*MsgCreateSignedMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSignedMessage not implemented")
}
func (*UnimplementedMsgServer) CreateMeditation(ctx context.Context, req *MsgCreateMeditation) (*MsgCreateMeditationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMeditation not implemented")
}
func (*UnimplementedMsgServer) CreateScripture(ctx context.Context, req *MsgCreateScripture) (*MsgCreateScriptureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateScripture not implemented")
}
func (*UnimplementedMsgServer) CreateScriptureSignatureRequest(ctx context.Context, req *MsgCreateScriptureSignatureRequest) (*MsgCreateScriptureSignatureRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateScriptureSignatureRequest not implemented")
}
func (*UnimplementedMsgServer) CreateScriptureSignatureShare(ctx context.Context, req *MsgCreateScriptureSignatureShare) (*MsgCreateScriptureSignatureShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateScriptureSignatureShare not implemented")
}
func (*UnimplementedMsgServer) CreateSignedScripture(ctx context.Context, req *MsgCreateSignedScripture) (*MsgCreateSignedScriptureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSignedScripture not implemented")
}
func (*UnimplementedMsgServer) CreateSignedScriptureList(ctx context.Context, req *MsgCreateSignedScriptureList) (*MsgCreateSignedScriptureListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSignedScriptureList not implemented")
}
func (*UnimplementedMsgServer) CreateBlessing(ctx context.Context, req *MsgCreateBlessing) (*MsgCreateBlessingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBlessing not implemented")
}
func (*UnimplementedMsgServer) CreateKillConjuring(ctx context.Context, req *MsgCreateKillConjuring) (*MsgCreateKillConjuringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKillConjuring not implemented")
}
func (*UnimplementedMsgServer) CreateKillImploring(ctx context.Context, req *MsgCreateKillImploring) (*MsgCreateKillImploringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKillImploring not implemented")
}
func (*UnimplementedMsgServer) CreateKillMeditationSummoning(ctx context.Context, req *MsgCreateKillMeditationSummoning) (*MsgCreateKillMeditationSummoningResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKillMeditationSummoning not implemented")
}
func (*UnimplementedMsgServer) CreateKillMagicKeySummoning(ctx context.Context, req *MsgCreateKillMagicKeySummoning) (*MsgCreateKillMagicKeySummoningResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKillMagicKeySummoning not implemented")
}
func (*UnimplementedMsgServer) CreateKillScriptureSignatureRequest(ctx context.Context, req *MsgCreateKillScriptureSignatureRequest) (*MsgCreateKillScriptureSignatureRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKillScriptureSignatureRequest not implemented")
}
func (*UnimplementedMsgServer) CreateKillSignatureRequest(ctx context.Context, req *MsgCreateKillSignatureRequest) (*MsgCreateKillSignatureRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKillSignatureRequest not implemented")
}
func (*UnimplementedMsgServer) CreateEncryptedMagicKeyShare(ctx context.Context, req *MsgCreateEncryptedMagicKeyShare) (*MsgCreateEncryptedMagicKeyShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEncryptedMagicKeyShare not implemented")
}
func (*UnimplementedMsgServer) DeleteEncryptedMagicKeyShare(ctx context.Context, req *MsgDeleteEncryptedMagicKeyShare) (*MsgDeleteEncryptedMagicKeyShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEncryptedMagicKeyShare not implemented")
}
func (*UnimplementedMsgServer) CreateEncryptedPreSign(ctx context.Context, req *MsgCreateEncryptedPreSign) (*MsgCreateEncryptedPreSignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEncryptedPreSign not implemented")
}
func (*UnimplementedMsgServer) DeleteEncryptedPreSign(ctx context.Context, req *MsgDeleteEncryptedPreSign) (*MsgDeleteEncryptedPreSignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEncryptedPreSign not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateMagicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMagicKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMagicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateMagicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMagicKey(ctx, req.(*MsgCreateMagicKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSpiritConjuringPoems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSpiritConjuringPoems)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSpiritConjuringPoems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateSpiritConjuringPoems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSpiritConjuringPoems(ctx, req.(*MsgCreateSpiritConjuringPoems))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FinalizeConjuring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFinalizeConjuring)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FinalizeConjuring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/FinalizeConjuring",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FinalizeConjuring(ctx, req.(*MsgFinalizeConjuring))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateVerse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateVerse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateVerse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateVerse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateVerse(ctx, req.(*MsgCreateVerse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateVision_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateVision)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateVision(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateVision",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateVision(ctx, req.(*MsgCreateVision))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMessage(ctx, req.(*MsgCreateMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSignatureRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSignatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSignatureRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateSignatureRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSignatureRequest(ctx, req.(*MsgCreateSignatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSignatureShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSignatureShare)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSignatureShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateSignatureShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSignatureShare(ctx, req.(*MsgCreateSignatureShare))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSignedMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSignedMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSignedMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateSignedMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSignedMessage(ctx, req.(*MsgCreateSignedMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMeditation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMeditation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMeditation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateMeditation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMeditation(ctx, req.(*MsgCreateMeditation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateScripture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateScripture)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateScripture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateScripture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateScripture(ctx, req.(*MsgCreateScripture))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateScriptureSignatureRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateScriptureSignatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateScriptureSignatureRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateScriptureSignatureRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateScriptureSignatureRequest(ctx, req.(*MsgCreateScriptureSignatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateScriptureSignatureShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateScriptureSignatureShare)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateScriptureSignatureShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateScriptureSignatureShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateScriptureSignatureShare(ctx, req.(*MsgCreateScriptureSignatureShare))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSignedScripture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSignedScripture)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSignedScripture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateSignedScripture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSignedScripture(ctx, req.(*MsgCreateSignedScripture))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSignedScriptureList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSignedScriptureList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSignedScriptureList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateSignedScriptureList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSignedScriptureList(ctx, req.(*MsgCreateSignedScriptureList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateBlessing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateBlessing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateBlessing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateBlessing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateBlessing(ctx, req.(*MsgCreateBlessing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateKillConjuring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateKillConjuring)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateKillConjuring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateKillConjuring",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateKillConjuring(ctx, req.(*MsgCreateKillConjuring))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateKillImploring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateKillImploring)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateKillImploring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateKillImploring",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateKillImploring(ctx, req.(*MsgCreateKillImploring))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateKillMeditationSummoning_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateKillMeditationSummoning)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateKillMeditationSummoning(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateKillMeditationSummoning",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateKillMeditationSummoning(ctx, req.(*MsgCreateKillMeditationSummoning))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateKillMagicKeySummoning_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateKillMagicKeySummoning)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateKillMagicKeySummoning(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateKillMagicKeySummoning",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateKillMagicKeySummoning(ctx, req.(*MsgCreateKillMagicKeySummoning))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateKillScriptureSignatureRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateKillScriptureSignatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateKillScriptureSignatureRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateKillScriptureSignatureRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateKillScriptureSignatureRequest(ctx, req.(*MsgCreateKillScriptureSignatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateKillSignatureRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateKillSignatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateKillSignatureRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateKillSignatureRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateKillSignatureRequest(ctx, req.(*MsgCreateKillSignatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateEncryptedMagicKeyShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEncryptedMagicKeyShare)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEncryptedMagicKeyShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateEncryptedMagicKeyShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEncryptedMagicKeyShare(ctx, req.(*MsgCreateEncryptedMagicKeyShare))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteEncryptedMagicKeyShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteEncryptedMagicKeyShare)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteEncryptedMagicKeyShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/DeleteEncryptedMagicKeyShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteEncryptedMagicKeyShare(ctx, req.(*MsgDeleteEncryptedMagicKeyShare))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateEncryptedPreSign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEncryptedPreSign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEncryptedPreSign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/CreateEncryptedPreSign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEncryptedPreSign(ctx, req.(*MsgCreateEncryptedPreSign))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteEncryptedPreSign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteEncryptedPreSign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteEncryptedPreSign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eightball.eightball.Msg/DeleteEncryptedPreSign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteEncryptedPreSign(ctx, req.(*MsgDeleteEncryptedPreSign))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eightball.eightball.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMagicKey",
			Handler:    _Msg_CreateMagicKey_Handler,
		},
		{
			MethodName: "CreateSpiritConjuringPoems",
			Handler:    _Msg_CreateSpiritConjuringPoems_Handler,
		},
		{
			MethodName: "FinalizeConjuring",
			Handler:    _Msg_FinalizeConjuring_Handler,
		},
		{
			MethodName: "CreateVerse",
			Handler:    _Msg_CreateVerse_Handler,
		},
		{
			MethodName: "CreateVision",
			Handler:    _Msg_CreateVision_Handler,
		},
		{
			MethodName: "CreateMessage",
			Handler:    _Msg_CreateMessage_Handler,
		},
		{
			MethodName: "CreateSignatureRequest",
			Handler:    _Msg_CreateSignatureRequest_Handler,
		},
		{
			MethodName: "CreateSignatureShare",
			Handler:    _Msg_CreateSignatureShare_Handler,
		},
		{
			MethodName: "CreateSignedMessage",
			Handler:    _Msg_CreateSignedMessage_Handler,
		},
		{
			MethodName: "CreateMeditation",
			Handler:    _Msg_CreateMeditation_Handler,
		},
		{
			MethodName: "CreateScripture",
			Handler:    _Msg_CreateScripture_Handler,
		},
		{
			MethodName: "CreateScriptureSignatureRequest",
			Handler:    _Msg_CreateScriptureSignatureRequest_Handler,
		},
		{
			MethodName: "CreateScriptureSignatureShare",
			Handler:    _Msg_CreateScriptureSignatureShare_Handler,
		},
		{
			MethodName: "CreateSignedScripture",
			Handler:    _Msg_CreateSignedScripture_Handler,
		},
		{
			MethodName: "CreateSignedScriptureList",
			Handler:    _Msg_CreateSignedScriptureList_Handler,
		},
		{
			MethodName: "CreateBlessing",
			Handler:    _Msg_CreateBlessing_Handler,
		},
		{
			MethodName: "CreateKillConjuring",
			Handler:    _Msg_CreateKillConjuring_Handler,
		},
		{
			MethodName: "CreateKillImploring",
			Handler:    _Msg_CreateKillImploring_Handler,
		},
		{
			MethodName: "CreateKillMeditationSummoning",
			Handler:    _Msg_CreateKillMeditationSummoning_Handler,
		},
		{
			MethodName: "CreateKillMagicKeySummoning",
			Handler:    _Msg_CreateKillMagicKeySummoning_Handler,
		},
		{
			MethodName: "CreateKillScriptureSignatureRequest",
			Handler:    _Msg_CreateKillScriptureSignatureRequest_Handler,
		},
		{
			MethodName: "CreateKillSignatureRequest",
			Handler:    _Msg_CreateKillSignatureRequest_Handler,
		},
		{
			MethodName: "CreateEncryptedMagicKeyShare",
			Handler:    _Msg_CreateEncryptedMagicKeyShare_Handler,
		},
		{
			MethodName: "DeleteEncryptedMagicKeyShare",
			Handler:    _Msg_DeleteEncryptedMagicKeyShare_Handler,
		},
		{
			MethodName: "CreateEncryptedPreSign",
			Handler:    _Msg_CreateEncryptedPreSign_Handler,
		},
		{
			MethodName: "DeleteEncryptedPreSign",
			Handler:    _Msg_DeleteEncryptedPreSign_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eightball/eightball/tx.proto",
}

func (m *MsgCreateMagicKey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMagicKey) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMagicKey) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMagicKeyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMagicKeyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMagicKeyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSpiritConjuringPoems) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSpiritConjuringPoems) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSpiritConjuringPoems) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UeblPower != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UeblPower))
		i--
		dAtA[i] = 0x30
	}
	if m.ConjuringId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ConjuringId))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Poem) > 0 {
		i -= len(m.Poem)
		copy(dAtA[i:], m.Poem)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Poem)))
		i--
		dAtA[i] = 0x22
	}
	if m.BlockHeight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x18
	}
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSpiritConjuringPoemsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSpiritConjuringPoemsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSpiritConjuringPoemsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeConjuring) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeConjuring) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeConjuring) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ConjuringId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ConjuringId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeConjuringResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeConjuringResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeConjuringResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateVerse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVerse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVerse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SummoningId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SummoningId))
		i--
		dAtA[i] = 0x48
	}
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x40
	}
	if m.ToOldAndNew {
		i--
		if m.ToOldAndNew {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.ToOld {
		i--
		if m.ToOld {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Broadcast {
		i--
		if m.Broadcast {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.WireBytes) > 0 {
		i -= len(m.WireBytes)
		copy(dAtA[i:], m.WireBytes)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WireBytes)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ToSpirit) > 0 {
		for iNdEx := len(m.ToSpirit) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ToSpirit[iNdEx])
			copy(dAtA[i:], m.ToSpirit[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.ToSpirit[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.FromSpirit) > 0 {
		i -= len(m.FromSpirit)
		copy(dAtA[i:], m.FromSpirit)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FromSpirit)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateVerseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVerseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVerseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteVerse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteVerse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteVerse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteVerseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteVerseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteVerseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateVision) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVision) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVision) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SummoningId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SummoningId))
		i--
		dAtA[i] = 0x28
	}
	if len(m.EcPointY) > 0 {
		i -= len(m.EcPointY)
		copy(dAtA[i:], m.EcPointY)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EcPointY)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.EcPointX) > 0 {
		i -= len(m.EcPointX)
		copy(dAtA[i:], m.EcPointX)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EcPointX)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateVisionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVisionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVisionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteVision) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteVision) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteVision) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteVisionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteVisionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteVisionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Body) > 0 {
		i -= len(m.Body)
		copy(dAtA[i:], m.Body)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Body)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMessageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMessageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMessageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignatureRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignatureRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignatureRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MessageId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MessageId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignatureRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignatureRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignatureRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSignatureRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSignatureRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSignatureRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MessageId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MessageId))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSignatureRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSignatureRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSignatureRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSignatureRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSignatureRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSignatureRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSignatureRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSignatureRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSignatureRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignatureShare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignatureShare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignatureShare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PubKey) > 0 {
		i -= len(m.PubKey)
		copy(dAtA[i:], m.PubKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PubKey)))
		i--
		dAtA[i] = 0x2a
	}
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ShareData) > 0 {
		i -= len(m.ShareData)
		copy(dAtA[i:], m.ShareData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ShareData)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MessageId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MessageId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignatureShareResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignatureShareResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignatureShareResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignedMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignedMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignedMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x38
	}
	if m.SigRequestId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SigRequestId))
		i--
		dAtA[i] = 0x30
	}
	if m.MessageId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MessageId))
		i--
		dAtA[i] = 0x28
	}
	if len(m.BitcoinAddress) > 0 {
		i -= len(m.BitcoinAddress)
		copy(dAtA[i:], m.BitcoinAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BitcoinAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Signature) > 0 {
		i -= len(m.Signature)
		copy(dAtA[i:], m.Signature)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signature)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Body) > 0 {
		i -= len(m.Body)
		copy(dAtA[i:], m.Body)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Body)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignedMessageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignedMessageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignedMessageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMeditationSummoning) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMeditationSummoning) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMeditationSummoning) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMeditationSummoningResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMeditationSummoningResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMeditationSummoningResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMeditationSummoning) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMeditationSummoning) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMeditationSummoning) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMeditationSummoningResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMeditationSummoningResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMeditationSummoningResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateMeditation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMeditation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMeditation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SummoningId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SummoningId))
		i--
		dAtA[i] = 0x48
	}
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x40
	}
	if m.ToOldAndNew {
		i--
		if m.ToOldAndNew {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.ToOld {
		i--
		if m.ToOld {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Broadcast {
		i--
		if m.Broadcast {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.WireBytes) > 0 {
		i -= len(m.WireBytes)
		copy(dAtA[i:], m.WireBytes)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WireBytes)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ToSpirit) > 0 {
		for iNdEx := len(m.ToSpirit) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ToSpirit[iNdEx])
			copy(dAtA[i:], m.ToSpirit[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.ToSpirit[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.FromSpirit) > 0 {
		i -= len(m.FromSpirit)
		copy(dAtA[i:], m.FromSpirit)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FromSpirit)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMeditationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMeditationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMeditationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMeditation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMeditation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMeditation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMeditationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMeditationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMeditationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateScripture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateScripture) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateScripture) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Witness) > 0 {
		i -= len(m.Witness)
		copy(dAtA[i:], m.Witness)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Witness)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateScriptureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateScriptureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateScriptureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateScriptureSignatureRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateScriptureSignatureRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateScriptureSignatureRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ScriptureIndex) > 0 {
		i -= len(m.ScriptureIndex)
		copy(dAtA[i:], m.ScriptureIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ScriptureIndex)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateScriptureSignatureRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateScriptureSignatureRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateScriptureSignatureRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateScriptureSignatureShare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateScriptureSignatureShare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateScriptureSignatureShare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PubKey) > 0 {
		i -= len(m.PubKey)
		copy(dAtA[i:], m.PubKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PubKey)))
		i--
		dAtA[i] = 0x2a
	}
	if m.MagicKeyId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MagicKeyId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ShareData) > 0 {
		i -= len(m.ShareData)
		copy(dAtA[i:], m.ShareData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ShareData)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ScriptureIndex) > 0 {
		i -= len(m.ScriptureIndex)
		copy(dAtA[i:], m.ScriptureIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ScriptureIndex)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateScriptureSignatureShareResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateScriptureSignatureShareResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateScriptureSignatureShareResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignedScripture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignedScripture) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignedScripture) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SigRequestId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SigRequestId))
		i--
		dAtA[i] = 0x30
	}
	if len(m.MagicKeyId) > 0 {
		i -= len(m.MagicKeyId)
		copy(dAtA[i:], m.MagicKeyId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MagicKeyId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BtcAddress) > 0 {
		i -= len(m.BtcAddress)
		copy(dAtA[i:], m.BtcAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BtcAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Signature) > 0 {
		i -= len(m.Signature)
		copy(dAtA[i:], m.Signature)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signature)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Witness) > 0 {
		i -= len(m.Witness)
		copy(dAtA[i:], m.Witness)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Witness)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignedScriptureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignedScriptureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignedScriptureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignedScriptureList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignedScriptureList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignedScriptureList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ScriptureIndex) > 0 {
		i -= len(m.ScriptureIndex)
		copy(dAtA[i:], m.ScriptureIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ScriptureIndex)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignedScriptureListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignedScriptureListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignedScriptureListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateBlessing) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBlessing) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBlessing) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateBlessingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBlessingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBlessingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillConjuring) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillConjuring) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillConjuring) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Height != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillConjuringResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillConjuringResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillConjuringResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillImploring) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillImploring) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillImploring) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillImploringResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillImploringResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillImploringResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillMeditationSummoning) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillMeditationSummoning) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillMeditationSummoning) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillMeditationSummoningResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillMeditationSummoningResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillMeditationSummoningResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillMagicKeySummoning) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillMagicKeySummoning) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillMagicKeySummoning) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillMagicKeySummoningResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillMagicKeySummoningResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillMagicKeySummoningResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillScriptureSignatureRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillScriptureSignatureRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillScriptureSignatureRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillScriptureSignatureRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillScriptureSignatureRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillScriptureSignatureRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillSignatureRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillSignatureRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillSignatureRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKillSignatureRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKillSignatureRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKillSignatureRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEncryptedMagicKeyShare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEncryptedMagicKeyShare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEncryptedMagicKeyShare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MagicKeyId) > 0 {
		i -= len(m.MagicKeyId)
		copy(dAtA[i:], m.MagicKeyId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MagicKeyId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEncryptedMagicKeyShareResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEncryptedMagicKeyShareResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEncryptedMagicKeyShareResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEncryptedMagicKeyShare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEncryptedMagicKeyShare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEncryptedMagicKeyShare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MagicKeyId) > 0 {
		i -= len(m.MagicKeyId)
		copy(dAtA[i:], m.MagicKeyId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MagicKeyId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEncryptedMagicKeyShareResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEncryptedMagicKeyShareResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEncryptedMagicKeyShareResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateEncryptedPreSign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEncryptedPreSign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEncryptedPreSign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MagicKeyId) > 0 {
		i -= len(m.MagicKeyId)
		copy(dAtA[i:], m.MagicKeyId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MagicKeyId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEncryptedPreSignResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEncryptedPreSignResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEncryptedPreSignResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEncryptedPreSign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEncryptedPreSign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEncryptedPreSign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MagicKeyId) > 0 {
		i -= len(m.MagicKeyId)
		copy(dAtA[i:], m.MagicKeyId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MagicKeyId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEncryptedPreSignResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEncryptedPreSignResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEncryptedPreSignResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateMagicKey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateMagicKeyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateSpiritConjuringPoems) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovTx(uint64(m.BlockHeight))
	}
	l = len(m.Poem)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ConjuringId != 0 {
		n += 1 + sovTx(uint64(m.ConjuringId))
	}
	if m.UeblPower != 0 {
		n += 1 + sovTx(uint64(m.UeblPower))
	}
	return n
}

func (m *MsgCreateSpiritConjuringPoemsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgFinalizeConjuring) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ConjuringId != 0 {
		n += 1 + sovTx(uint64(m.ConjuringId))
	}
	return n
}

func (m *MsgFinalizeConjuringResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateVerse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FromSpirit)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.ToSpirit) > 0 {
		for _, s := range m.ToSpirit {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.WireBytes)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Broadcast {
		n += 2
	}
	if m.ToOld {
		n += 2
	}
	if m.ToOldAndNew {
		n += 2
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	if m.SummoningId != 0 {
		n += 1 + sovTx(uint64(m.SummoningId))
	}
	return n
}

func (m *MsgCreateVerseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteVerse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteVerseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateVision) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	l = len(m.EcPointX)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EcPointY)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SummoningId != 0 {
		n += 1 + sovTx(uint64(m.SummoningId))
	}
	return n
}

func (m *MsgCreateVisionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteVision) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteVisionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateMessageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateSignatureRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MessageId != 0 {
		n += 1 + sovTx(uint64(m.MessageId))
	}
	return n
}

func (m *MsgCreateSignatureRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSignatureRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.MessageId != 0 {
		n += 1 + sovTx(uint64(m.MessageId))
	}
	return n
}

func (m *MsgUpdateSignatureRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSignatureRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSignatureRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSignatureShare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MessageId != 0 {
		n += 1 + sovTx(uint64(m.MessageId))
	}
	l = len(m.ShareData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	l = len(m.PubKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSignatureShareResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateSignedMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BitcoinAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MessageId != 0 {
		n += 1 + sovTx(uint64(m.MessageId))
	}
	if m.SigRequestId != 0 {
		n += 1 + sovTx(uint64(m.SigRequestId))
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	return n
}

func (m *MsgCreateSignedMessageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateMeditationSummoning) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	return n
}

func (m *MsgCreateMeditationSummoningResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteMeditationSummoning) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteMeditationSummoningResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateMeditation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FromSpirit)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.ToSpirit) > 0 {
		for _, s := range m.ToSpirit {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.WireBytes)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Broadcast {
		n += 2
	}
	if m.ToOld {
		n += 2
	}
	if m.ToOldAndNew {
		n += 2
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	if m.SummoningId != 0 {
		n += 1 + sovTx(uint64(m.SummoningId))
	}
	return n
}

func (m *MsgCreateMeditationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteMeditation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteMeditationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateScripture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Witness)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateScriptureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateScriptureSignatureRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ScriptureIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateScriptureSignatureRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateScriptureSignatureShare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ScriptureIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ShareData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MagicKeyId != 0 {
		n += 1 + sovTx(uint64(m.MagicKeyId))
	}
	l = len(m.PubKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateScriptureSignatureShareResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateSignedScripture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Witness)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BtcAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MagicKeyId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SigRequestId != 0 {
		n += 1 + sovTx(uint64(m.SigRequestId))
	}
	return n
}

func (m *MsgCreateSignedScriptureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSignedScriptureList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ScriptureIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSignedScriptureListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateBlessing) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateBlessingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateKillConjuring) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Height != 0 {
		n += 1 + sovTx(uint64(m.Height))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateKillConjuringResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateKillImploring) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateKillImploringResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateKillMeditationSummoning) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateKillMeditationSummoningResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateKillMagicKeySummoning) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateKillMagicKeySummoningResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateKillScriptureSignatureRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateKillScriptureSignatureRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateKillSignatureRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateKillSignatureRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateEncryptedMagicKeyShare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MagicKeyId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateEncryptedMagicKeyShareResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteEncryptedMagicKeyShare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MagicKeyId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteEncryptedMagicKeyShareResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateEncryptedPreSign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MagicKeyId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateEncryptedPreSignResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteEncryptedPreSign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MagicKeyId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteEncryptedPreSignResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateMagicKey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMagicKey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMagicKey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMagicKeyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMagicKeyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMagicKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSpiritConjuringPoems) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSpiritConjuringPoems: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSpiritConjuringPoems: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Poem", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Poem = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConjuringId", wireType)
			}
			m.ConjuringId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConjuringId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UeblPower", wireType)
			}
			m.UeblPower = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UeblPower |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSpiritConjuringPoemsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSpiritConjuringPoemsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSpiritConjuringPoemsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinalizeConjuring) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeConjuring: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeConjuring: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConjuringId", wireType)
			}
			m.ConjuringId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConjuringId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinalizeConjuringResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeConjuringResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeConjuringResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVerse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVerse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVerse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromSpirit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromSpirit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToSpirit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToSpirit = append(m.ToSpirit, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WireBytes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WireBytes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broadcast", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Broadcast = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToOld", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ToOld = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToOldAndNew", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ToOldAndNew = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SummoningId", wireType)
			}
			m.SummoningId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SummoningId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVerseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVerseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVerseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteVerse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteVerse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteVerse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteVerseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteVerseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteVerseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVision) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVision: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVision: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EcPointX", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EcPointX = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EcPointY", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EcPointY = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SummoningId", wireType)
			}
			m.SummoningId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SummoningId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVisionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVisionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVisionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteVision) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteVision: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteVision: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteVisionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteVisionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteVisionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMessageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMessageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMessageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignatureRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignatureRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignatureRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignatureRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignatureRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSignatureRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSignatureRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSignatureRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSignatureRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSignatureRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSignatureRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSignatureRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSignatureRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSignatureRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSignatureRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignatureShare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignatureShare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignatureShare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PubKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PubKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignatureShareResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignatureShareResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignatureShareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignedMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignedMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignedMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BitcoinAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BitcoinAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SigRequestId", wireType)
			}
			m.SigRequestId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SigRequestId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignedMessageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignedMessageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignedMessageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMeditationSummoning) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMeditationSummoning: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMeditationSummoning: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMeditationSummoningResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMeditationSummoningResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMeditationSummoningResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMeditationSummoning) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMeditationSummoning: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMeditationSummoning: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMeditationSummoningResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMeditationSummoningResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMeditationSummoningResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMeditation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMeditation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMeditation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromSpirit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromSpirit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToSpirit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToSpirit = append(m.ToSpirit, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WireBytes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WireBytes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broadcast", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Broadcast = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToOld", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ToOld = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToOldAndNew", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ToOldAndNew = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SummoningId", wireType)
			}
			m.SummoningId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SummoningId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMeditationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMeditationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMeditationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMeditation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMeditation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMeditation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMeditationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMeditationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMeditationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateScripture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateScripture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateScripture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Witness", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Witness = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateScriptureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateScriptureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateScriptureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateScriptureSignatureRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateScriptureSignatureRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateScriptureSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScriptureIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScriptureIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateScriptureSignatureRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateScriptureSignatureRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateScriptureSignatureRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateScriptureSignatureShare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateScriptureSignatureShare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateScriptureSignatureShare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScriptureIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScriptureIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			m.MagicKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MagicKeyId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PubKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PubKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateScriptureSignatureShareResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateScriptureSignatureShareResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateScriptureSignatureShareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignedScripture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignedScripture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignedScripture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Witness", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Witness = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BtcAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BtcAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MagicKeyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SigRequestId", wireType)
			}
			m.SigRequestId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SigRequestId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignedScriptureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignedScriptureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignedScriptureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignedScriptureList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignedScriptureList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignedScriptureList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScriptureIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScriptureIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignedScriptureListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignedScriptureListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignedScriptureListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBlessing) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBlessing: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBlessing: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBlessingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBlessingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBlessingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillConjuring) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillConjuring: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillConjuring: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillConjuringResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillConjuringResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillConjuringResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillImploring) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillImploring: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillImploring: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillImploringResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillImploringResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillImploringResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillMeditationSummoning) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillMeditationSummoning: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillMeditationSummoning: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillMeditationSummoningResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillMeditationSummoningResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillMeditationSummoningResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillMagicKeySummoning) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillMagicKeySummoning: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillMagicKeySummoning: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillMagicKeySummoningResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillMagicKeySummoningResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillMagicKeySummoningResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillScriptureSignatureRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillScriptureSignatureRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillScriptureSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillScriptureSignatureRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillScriptureSignatureRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillScriptureSignatureRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillSignatureRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillSignatureRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKillSignatureRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKillSignatureRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKillSignatureRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEncryptedMagicKeyShare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEncryptedMagicKeyShare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEncryptedMagicKeyShare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MagicKeyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEncryptedMagicKeyShareResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEncryptedMagicKeyShareResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEncryptedMagicKeyShareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEncryptedMagicKeyShare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEncryptedMagicKeyShare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEncryptedMagicKeyShare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MagicKeyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEncryptedMagicKeyShareResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEncryptedMagicKeyShareResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEncryptedMagicKeyShareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEncryptedPreSign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEncryptedPreSign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEncryptedPreSign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MagicKeyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEncryptedPreSignResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEncryptedPreSignResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEncryptedPreSignResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEncryptedPreSign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEncryptedPreSign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEncryptedPreSign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MagicKeyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MagicKeyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEncryptedPreSignResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEncryptedPreSignResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEncryptedPreSignResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
