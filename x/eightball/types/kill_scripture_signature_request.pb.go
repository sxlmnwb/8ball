// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: eightball/eightball/kill_scripture_signature_request.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type KillScriptureSignatureRequest struct {
	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Height   uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Metadata string `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Creator  string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *KillScriptureSignatureRequest) Reset()         { *m = KillScriptureSignatureRequest{} }
func (m *KillScriptureSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*KillScriptureSignatureRequest) ProtoMessage()    {}
func (*KillScriptureSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_788a1d85d0240f9c, []int{0}
}
func (m *KillScriptureSignatureRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KillScriptureSignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_KillScriptureSignatureRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *KillScriptureSignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillScriptureSignatureRequest.Merge(m, src)
}
func (m *KillScriptureSignatureRequest) XXX_Size() int {
	return m.Size()
}
func (m *KillScriptureSignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KillScriptureSignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KillScriptureSignatureRequest proto.InternalMessageInfo

func (m *KillScriptureSignatureRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *KillScriptureSignatureRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *KillScriptureSignatureRequest) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *KillScriptureSignatureRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*KillScriptureSignatureRequest)(nil), "eightball.eightball.KillScriptureSignatureRequest")
}

func init() {
	proto.RegisterFile("eightball/eightball/kill_scripture_signature_request.proto", fileDescriptor_788a1d85d0240f9c)
}

var fileDescriptor_788a1d85d0240f9c = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4a, 0xcd, 0x4c, 0xcf,
	0x28, 0x49, 0x4a, 0xcc, 0xc9, 0xd1, 0x47, 0xb0, 0xb2, 0x33, 0x73, 0x72, 0xe2, 0x8b, 0x93, 0x8b,
	0x32, 0x0b, 0x4a, 0x4a, 0x8b, 0x52, 0xe3, 0x8b, 0x33, 0xd3, 0xf3, 0x12, 0xc1, 0xac, 0xa2, 0xd4,
	0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0x21, 0x61, 0xb8, 0x0e, 0x3d,
	0x38, 0x4b, 0xa9, 0x96, 0x4b, 0xd6, 0x3b, 0x33, 0x27, 0x27, 0x18, 0xa6, 0x3b, 0x18, 0xa6, 0x39,
	0x08, 0xa2, 0x57, 0x88, 0x8f, 0x8b, 0x29, 0x33, 0x45, 0x82, 0x51, 0x81, 0x51, 0x83, 0x25, 0x88,
	0x29, 0x33, 0x45, 0x48, 0x8c, 0x8b, 0x2d, 0x03, 0xac, 0x5d, 0x82, 0x09, 0x2c, 0x06, 0xe5, 0x09,
	0x49, 0x71, 0x71, 0xe4, 0xa6, 0x96, 0x24, 0xa6, 0x24, 0x96, 0x24, 0x4a, 0x30, 0x2b, 0x30, 0x6a,
	0x70, 0x06, 0xc1, 0xf9, 0x42, 0x12, 0x5c, 0xec, 0xc9, 0x45, 0xa9, 0x89, 0x25, 0xf9, 0x45, 0x12,
	0x2c, 0x60, 0x29, 0x18, 0xd7, 0xc9, 0xf4, 0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f,
	0x3c, 0x92, 0x63, 0x9c, 0xf0, 0x58, 0x8e, 0xe1, 0xc2, 0x63, 0x39, 0x86, 0x1b, 0x8f, 0xe5, 0x18,
	0xa2, 0xa4, 0x11, 0xfe, 0xab, 0x40, 0xf2, 0x6b, 0x49, 0x65, 0x41, 0x6a, 0x71, 0x12, 0x1b, 0xd8,
	0x47, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xd9, 0xc4, 0x02, 0x0f, 0x01, 0x00, 0x00,
}

func (m *KillScriptureSignatureRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KillScriptureSignatureRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KillScriptureSignatureRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintKillScriptureSignatureRequest(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintKillScriptureSignatureRequest(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Height != 0 {
		i = encodeVarintKillScriptureSignatureRequest(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintKillScriptureSignatureRequest(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintKillScriptureSignatureRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovKillScriptureSignatureRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *KillScriptureSignatureRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovKillScriptureSignatureRequest(uint64(m.Id))
	}
	if m.Height != 0 {
		n += 1 + sovKillScriptureSignatureRequest(uint64(m.Height))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovKillScriptureSignatureRequest(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovKillScriptureSignatureRequest(uint64(l))
	}
	return n
}

func sovKillScriptureSignatureRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozKillScriptureSignatureRequest(x uint64) (n int) {
	return sovKillScriptureSignatureRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *KillScriptureSignatureRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKillScriptureSignatureRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KillScriptureSignatureRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KillScriptureSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKillScriptureSignatureRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKillScriptureSignatureRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKillScriptureSignatureRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKillScriptureSignatureRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKillScriptureSignatureRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKillScriptureSignatureRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKillScriptureSignatureRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKillScriptureSignatureRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKillScriptureSignatureRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKillScriptureSignatureRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKillScriptureSignatureRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKillScriptureSignatureRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKillScriptureSignatureRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKillScriptureSignatureRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthKillScriptureSignatureRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupKillScriptureSignatureRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthKillScriptureSignatureRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthKillScriptureSignatureRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKillScriptureSignatureRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupKillScriptureSignatureRequest = fmt.Errorf("proto: unexpected end of group")
)
